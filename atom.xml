<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Scholar&#39;s Blog</title>
  <icon>https://www.gravatar.com/avatar/602ef83f0ffd972c903f2586d1314d92</icon>
  <subtitle>DO WHAT WE WANT</subtitle>
  <link href="https://scholargeek.github.io/atom.xml" rel="self"/>
  
  <link href="https://scholargeek.github.io/"/>
  <updated>2023-03-06T04:06:06.000Z</updated>
  <id>https://scholargeek.github.io/</id>
  
  <author>
    <name>董仕麟</name>
    <email>scholargeek@foxmail.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>JavaScript学习</title>
    <link href="https://scholargeek.github.io/2023/03/06/JavaScript/"/>
    <id>https://scholargeek.github.io/2023/03/06/JavaScript/</id>
    <published>2023-03-06T04:06:06.000Z</published>
    <updated>2023-03-06T04:06:06.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="JavaScript简介"><a href="#JavaScript简介" class="headerlink" title="JavaScript简介"></a>JavaScript简介</h1><p>　　JavaScript（缩写为JS）是一门基于原型和头等函数的多范式高级解释型编程语言，它支持面向对象程序设计、指令式编程和函数式编程。它提供方法来操控文本、数组、日期以及正则表达式等。不支持I&#x2F;O，比如网络、存储和图形等，但这些都可以由它的宿主环境提供支持。它由Ecma通过ECMAScript实现语言的标准化。目前，它被世界上的绝大多数网站所使用，也被世界主流浏览器（Chrome、Firefox、Safari和Opera）所支持。</p><span id="more"></span><p>　　JavaScript与Java在名字和语法上都很相似，但这两门编程语言从设计之初就有很大不同。JavaScript在语言设计上主要受到了Self（一种基于原型的编程语言）和Scheme（一门函数式编程语言）的影响，在语法结构上它和C语言很相似（如if条件语句、switch语句、while循环和do-while循环等）。对于客户端来说，JavaScript通常被实现为一门解释语言，但如今它已经可以被即时编译（JIT）。随着HTML5和CSS3语言标准的推行，它还可以用于游戏、桌面和移动应用程序的开发，以及在服务器端网络环境运行（如Node.js）。</p><h2 id="基本信息"><a href="#基本信息" class="headerlink" title="基本信息"></a>基本信息</h2><p>编程范型:事件驱动、函数式、指令式<br>设计者:布兰登·艾克及ECMAScript规范的其他关键贡献者<br>发行时间:1995年12月4日<br>类型系统:动态类型、鸭子类型<br>文件扩展名:.js、.cjs、.mjs<br>官方网站:<a href="https://www.ecma-international.org/publications-and-standards/standards/ecma-262">https://www.ecma-international.org/publications-and-standards/standards/ecma-262</a></p><h2 id="历史"><a href="#历史" class="headerlink" title="历史"></a>历史</h2><h3 id="始于网景"><a href="#始于网景" class="headerlink" title="始于网景"></a>始于网景</h3><p>　　1993年，美国国家超级计算机应用中心(NCSA)发表了NCSA Mosaic，这是最早流行的图形接口网页浏览器，它在万维网的普及上发挥了重要作用。1994年，Mosaic的主要开发人员创立了Netscape公司，并雇用了许多原来的NCSA Mosaic开发者用来开发Netscape Navigator，该公司的目标是取代NCSA Mosaic成为世界第一的网页浏览器。在四个月内，已经占据了四分之三的浏览器市场，并成为1990年代互联网的主要浏览器。<br>　　在网络发展的这些年，网页只能是静态的，缺乏在浏览器中加载网页后的动态行为能力。公司的创始人马克·安德森认为HTML需要一种胶水语言，让网页设计师和兼职程序员可以很容易地使用它来组装图片和插件之类的组件，且代码可以直接编写在网页标记中。1995年，网景招募了布兰登·艾克，目标是把Scheme语言嵌入到Netscape Navigator浏览器中。但更早之前，网景已经跟昇阳合作，计划在Netscape Navigator中嵌入Java语言，这时网景内部产生激烈的争论，网景公司管理层很快决定，最佳的方案是由艾克设计一种新的语言，其语法类似于Java，而不像Scheme或其他现存的脚本语言。为了在其他竞争提案中捍卫JavaScript这个想法，公司需要有一个可以运作的原型。艾克在1995年5月仅花了十天时间就把原型设计出来了。最初命名为Mocha，1995年9月在Netscape Navigator 2.0的Beta版中改名为LiveScript，同年12月，Netscape Navigator 2.0 Beta 3中部署时被重命名为JavaScript。当时网景公司与昇阳电脑公司组成的开发联盟为了让这门语言搭上Java这个编程语言“热词”，因此将其临时改名为JavaScript，日后这成为大众对这门语言有诸多误解的原因之一。</p><h3 id="微软采纳"><a href="#微软采纳" class="headerlink" title="微软采纳"></a>微软采纳</h3><p>　　微软公司于1995年首次推出Internet Explorer，引发了与Netscape的浏览器大战。微软对Netscape Navigator解释器进行了逆向工程，创建了JScript，以与处于市场领导地位的网景产品同台竞争。JScript也是一种JavaScript实现，这两个JavaScript语言版本在浏览器端共存意味着语言标准化的缺失。发展初期，JavaScript的标准并未确定，同期就有网景的JavaScript和微软的JScript。除此之外，微软也在网页技术上加入了不少专属对象，使不少网页使用非微软平台及浏览器无法正常显示。这导致在浏览器大战期间网页设计者通常会把“用Netscape可达到最佳效果”或“用IE可达到最佳效果”的标志放在主页。</p><h3 id="标准化与增长"><a href="#标准化与增长" class="headerlink" title="标准化与增长"></a>标准化与增长</h3><p>　　1996年11月，网景正式向ECMA（欧洲计算机制造商协会）提交语言标准。1997年6月，ECMA以JavaScript语言为基础制定了ECMAScript标准规范ECMA-262。JavaScript成为了ECMAScript最著名的实现之一。除此之外，ActionScript和JScript也都是ECMAScript规范的实现语言。尽管JavaScript作为给非程序人员的脚本语言，而非作为给程序人员的编程语言来推广和宣传，但是JavaScript具有非常丰富的特性。<br>　　在21世纪初Internet Explorer占主导地位期间，客户端脚本停滞不前。这在2004年开始改变，当时Netscape的继任者Mozilla发布了Firefox浏览器。Firefox受到许多人的好评，从Internet Explorer获得了巨大的市场份额。2005年，Mozilla加入了ECMA International，并开始研究ECMAScript for XML（E4X）标准。这导致Mozilla与Macromedia（后来被Adobe Systems收购）合作，他们正在用基于ECMAScript 4草案的ActionScript 3语言实现E4X。目标是将ActionScript 3标准化为新的ECMAScript 4。为此，Adobe Systems将Tamarin实现作为开源项目发布。然而，Tamarin和ActionScript 3与既定的客户端脚本太不同，如果没有微软的合作，ECMAScript 4从未获取成果。与此同时，与ECMA工作无关的开源社区正在发生非常重要的发展。2005年，Jesse James Garrett发布了一份白皮书，其中他创造了Ajax一词，并描述了一套技术，其中JavaScript是骨干，用于创建可以在后台加载数据的Web应用程序，避免了重新加载整页的需要。这引发了JavaScript的复兴时期，由开源库和围绕它们形成的社区带头。创建了许多新库，包括jQuery、Prototype、Dojo Toolkit和MooTools。<br>　　谷歌于2008年首次推出Chrome浏览器，其V8 JavaScript引擎比竞争对手更快。关键的创新是及时编译（JIT），因此其他浏览器供应商需要为JIT彻底改革他们的引擎。<br>　　2008年7月，这些不同的团体聚集在一起，在奥斯陆举行会议。这导致在2009年初达成了最终协议，将所有相关工作结合起来，推动语言向前发展。使得2009年12月发布了ECMAScript 5标准。</p><h3 id="走向成熟"><a href="#走向成熟" class="headerlink" title="走向成熟"></a>走向成熟</h3><p>　　关于该语言雄心勃勃的工作持续了数年，最终随着 2015 年ECMAScript 6的发布而正式形成了广泛的补充和改进。Ryan Dahl在 2009 年创建的Node.js引发了 Web 浏览器之外 JavaScript 使用的显着增加。Node 结合了V8引擎、事件循环和I&#x2F;O API，从而提供了独立的 JavaScript 运行时系统。截至 2018 年，Node 已被数百万开发人员使用，并且npm拥有世界上所有包管理器中最多的模块。<br>　　ECMAScript 草案规范目前在GitHub上公开维护，并通过定期的年度快照生成版本。对语言的潜在修订通过全面的提案流程进行审查。<br>　　当前的 JavaScript 生态系统拥有许多库和框架、已建立的编程实践以及在 Web 浏览器之外大量使用 JavaScript。另外，随着单页应用程序和其他大量使用 JavaScript 的网站的兴起，已经创建了多个转译器来帮助开发过程。</p><h3 id="版本历史"><a href="#版本历史" class="headerlink" title="版本历史"></a>版本历史</h3><p><img src="https://s3.bmp.ovh/imgs/2024/04/18/3014076381f97729.png" alt="Javascript版本历史"><br>注：JavaScript最初开发于1996年，被使用于Netscape Navigator网页浏览器。同年微软在Internet Explorer发布了一个实现。由于商标问题，这项实现被命名为JScript。1997年，JavaScript已经被网景公司提交给ECMA制定为标准，称之为ECMAScript，标准编号ECMA-262。使用显式版本号声明对语言的引用，作为一项Mozilla的特性，已在较新版本中被移除（至少为Firefox 59）。Firefox 4是最后一个需要显式地在引用时声明明确版本号的版本(1.8.5)。</p><h2 id="语言特性"><a href="#语言特性" class="headerlink" title="语言特性"></a>语言特性</h2><p>完整的JavaScript包括：<br>●ECMAScript: 描述了该语言的语法和基本对象<br>●文档对象模型(DOM): 描述处理网页内容的方法和接口<br>●浏览器对象模型(BOM): 描述与浏览器进行交互的方法和接口</p><p>JavaScript的基本特点如下：<br>●是一种解释性脚本语言(代码不进行预编译)<br>●主要用来向HTML页面添加交互行为<br>●可以直接嵌入HTML页面，但写成单独的js文件有利于结构和行为的分离</p><p>JavaScript常用来完成以下任务：<br>●嵌入动态文本于HTML页面<br>●对浏览器事件作出响应<br>●读写HTML元素<br>●在数据被提交到服务器之前验证数据<br>●检测访客的浏览器信息<br>●控制Cookie，包括创建和修改等</p><p>　　不同于服务器端脚本语言（如PHP和ASP），JavaScript主要被作为客户端脚本语言在用户的浏览器上运行，不需要服务器的支持。所以在早期程序员比较青睐于JavaScript以减少对服务器的负担，而与此同时在安全性上出现了问题。随着服务器变得强大，现在的程序员更喜欢运行于服务端的脚本以保证安全，但JavaScript仍然以其跨平台、容易上手等优势大行其道。同时，有些特殊功能（如AJAX）必须依赖JavaScript在客户端提供支持。随着引擎（如V8）和框架（如Node.js）的发展，以及事件驱动和异步IO等特性，JavaScript也被逐渐用来编写服务器端程序。</p><h3 id="简单示例"><a href="#简单示例" class="headerlink" title="简单示例"></a>简单示例</h3><p>在游览器上输出Hello World。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;!<span class="variable constant_">DOCTYPE</span> <span class="variable constant_">HTML</span>&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>简单的JavaScript Hello World<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&quot;Hello, world!&quot;</span>);   <span class="comment">// 直接插入网页中显示</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="title function_">alert</span>(<span class="string">&quot;Hello, world!&quot;</span>);            <span class="comment">// 弹窗显示</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Hello, world!&quot;</span>);      <span class="comment">// 在控制台(console)里显示，需要先开启开发工具控制台</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">　　　　HTML内容……</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure><hr><p><strong>版权声明</strong></p><p><img src="/images/cc.png"></p><p><a href="https://scholargeek.github.io/">Scholar’s Blog</a> by <a href="https://scholargeek.github.io/About/">scholargeek</a> is licensed under a <a href="http://creativecommons.org/licenses/by-nc-nd/4.0/">Creative Commons BY-NC-ND 4.0 International License</a>.<br>由<a href="https://scholargeek.github.io/About/">董仕麟</a>创作并维护的<a href="https://scholargeek.github.io/">scholargeek</a>博客采用<a href="http://creativecommons.org/licenses/by-nc-nd/4.0/">创作共用保留署名-非商业-禁止演绎4.0国际许可证</a>。</p><p>本文首发于<a href="https://scholargeek.github.io/">Scholar’s Blog</a>博客，版权所有，侵权必究。</p><p>本文永久链接：<a href="https://scholargeek.github.io/2023/03/06/JavaScript/">https://scholargeek.github.io/2023/03/06/JavaScript/</a></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;JavaScript简介&quot;&gt;&lt;a href=&quot;#JavaScript简介&quot; class=&quot;headerlink&quot; title=&quot;JavaScript简介&quot;&gt;&lt;/a&gt;JavaScript简介&lt;/h1&gt;&lt;p&gt;　　JavaScript（缩写为JS）是一门基于原型和头等函数的多范式高级解释型编程语言，它支持面向对象程序设计、指令式编程和函数式编程。它提供方法来操控文本、数组、日期以及正则表达式等。不支持I&amp;#x2F;O，比如网络、存储和图形等，但这些都可以由它的宿主环境提供支持。它由Ecma通过ECMAScript实现语言的标准化。目前，它被世界上的绝大多数网站所使用，也被世界主流浏览器（Chrome、Firefox、Safari和Opera）所支持。&lt;/p&gt;</summary>
    
    
    
    <category term="编程" scheme="https://scholargeek.github.io/categories/Programming/"/>
    
    
    <category term="JavaScript" scheme="https://scholargeek.github.io/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>数据库学习4</title>
    <link href="https://scholargeek.github.io/2023/02/07/MySQL4/"/>
    <id>https://scholargeek.github.io/2023/02/07/MySQL4/</id>
    <published>2023-02-07T00:28:08.000Z</published>
    <updated>2023-02-07T00:28:08.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="数据库设计"><a href="#数据库设计" class="headerlink" title="数据库设计"></a>数据库设计</h1><p>　　数据库设计指对于一个给定的应用环境，构造（设计）优化的数据库逻辑模式和物理结构，并据此建立数据库及其应用系统，使之能够有效地存储和管理数据，满足各种用户的应用需求，包括信息管理要求和数据操作要求。<br>　　数据库设计的目标：是为用户和各种应用系统提供一个信息基础设施和高效率的运行环境 。数据库设计的基本任务：是根据用户的信息需求、处理需求和数据库的支持环境(包括硬件、操作系统和DBMS)，设计出数据库模式(包括外模式、逻辑模式和内模式)及其典型的应用程序。</p><span id="more"></span><h2 id="数据库设计的方法"><a href="#数据库设计的方法" class="headerlink" title="数据库设计的方法"></a>数据库设计的方法</h2><p>●直观设计法（手工试凑发）：数据库设计只是一种经验的反复实施，而不能称为是一门科学，缺乏科学分析理论基础和工程手段的支持，因为设计质量与设计人员的经验和水平有直接关系，所以设计质量很难保证。具有周期短、效率高、操作简便、易于实现等优点。主要是用于简单小型系统。<br>●规范设计法：将数据库设计分为若干阶段，明确规定各阶段的任务，采用“自顶向下、分层实现、逐步求精”的设计原则，结合数据库理论和软件工程设计方法，实现设计过程的每一细节，最终完成整个设计任务。（新奥尔良方法、基于E-R模型的数据库设计方法、基于3NF（第三范式）的设计方法、面向对象的数据库设计方法、统一建模语言（UML）方法）。<br>●计算机辅助设计法：在数据库设计的某些过程中，利用计算机和一些辅助设计工具，模拟某一规范设计方法，并以人的知识或经验为主导，通过人机交互方式实现设计中的某些部分。 （Oracle 公司开发的 Designer、Sybase公司开发的 PowerDesigner）。</p><h2 id="数据库设计的基本步骤"><a href="#数据库设计的基本步骤" class="headerlink" title="数据库设计的基本步骤"></a>数据库设计的基本步骤</h2><p>●需求分析：通过详细调查现实世界要处理的对象（组织、部门、企业等），充分了解原系统（手工系统或计算机系统）工作概况，明确用户的各种需求。<br>●概念结构设计：通过对用户需求进行综合、归纳与抽象，形成一个独立于具体数据库管理系统的概念模型。<br>●逻辑结构设计：将概念结构转换为某个数据库管理系统所支持的数据模型，并对其进行优化。<br>●物理结构设计：为逻辑数据结构选取一个最适合应用环境的物理结构,包括存储结构和存取方法。<br>●数据库实施：根据逻辑设计和物理设计的结果构建数据库,编写与调试应用程序,组织数据入库并进行试运行。<br>●数据库运行和维护：经过试运行后即可投入正式运行,在运行过程中必须不断对其进行评估、调整与修改。</p><p>★需求分析和概念设计独立于任何数据库管理系统<br>★逻辑设计和物理设计与选用的数据库管理系统密切相关<br><img src="https://s3.bmp.ovh/imgs/2024/04/08/2eba9052bf218f7b.png" alt="数据库设计流程"></p><h3 id="设计具体步骤"><a href="#设计具体步骤" class="headerlink" title="设计具体步骤"></a>设计具体步骤</h3><p>　　①收集信息：与该系统有关的人员进行交流，充分理解数据库需要完成的任务。<br>　　②标识对象：标识实体(Entity)<br>　　③标识每个实体的属性：标识各实体所含有的基本要素<br>　　④标识对象之间的关系：若为(1:N)一对多的关系，在多的实体表内建立外键与一的实体主键相连；若为(N:N)多对多的关系，则需建立一张桥表并将多的两张表中主键放入桥表作为外键，在桥表中新建ID作为主键。</p><h3 id="绘制E-R图"><a href="#绘制E-R图" class="headerlink" title="绘制E-R图"></a>绘制E-R图</h3><p>　　ER图分为实体、属性、关系三个核心部分。在ER图中，实体是长方形，属性是椭圆形，关系为菱形。绘制E-R图的步骤如下：<br>　　①确定所有的实体集合；<br>　　②选择实体集应包含的属性；<br>　　③确定实体集之间的联系；<br>　　④确定实体集的关键字，用下划线在属性上表明关键字的属性组合；<br>　　⑤确定联系的类型，在用线将表示联系的菱形框联系到实体集时，在线旁注明是1或n(多）来表示联系的类型。</p><h3 id="E-R图转换为表"><a href="#E-R图转换为表" class="headerlink" title="E-R图转换为表"></a>E-R图转换为表</h3><p>　　①将各个实体转换为对应的表名<br>　　②将各属性转换为各表对应的字段<br>　　③分析各个实体之间的关系确定主键与外键<br>　　④在各表之间建立主外键关系，实现实体间的联系</p><h2 id="数据库规范化"><a href="#数据库规范化" class="headerlink" title="数据库规范化"></a>数据库规范化</h2><p>　　数据库规范化又称正规化、标准化。是数据库设计的一系列原理和技术，以减少数据库中数据冗余，增进数据的一致性。关系模型的发明者埃德加·科德最早提出这一概念，并于1970年代初定义了第一范式、第二范式和第三范式的概念，还与Raymond F. Boyce于1974年共同定义了第三范式的改进范式——BC范式。除外还包括针对多值依赖的第四范式，连接依赖的第五范式、DK范式和第六范式。现在数据库设计最多满足3NF，普遍认为范式过高，虽然具有对数据关系更好的约束性，但也导致数据关系表增加而令数据库IO更易繁忙，原来交由数据库处理的关系约束现更多在数据库使用程序中完成。</p><p>●1NF: 第一范式：确保每列的原子性，即每列都是不可再分的最小数据单元（字段原子性）<br>●2NF: 第二范式：满足第一范式，且除主键外的其他列都依赖于主键。<br>●3NF: 第三范式：满足第二范式，且非主键字段不能依赖于其它非主键字段，即非主键字段间不能有传递依赖关系。</p><hr><p><strong>版权声明</strong></p><p><img src="/images/cc.png"></p><p><a href="https://scholargeek.github.io/">Scholar’s Blog</a> by <a href="https://scholargeek.github.io/About/">scholargeek</a> is licensed under a <a href="http://creativecommons.org/licenses/by-nc-nd/4.0/">Creative Commons BY-NC-ND 4.0 International License</a>.<br>由<a href="https://scholargeek.github.io/About/">董仕麟</a>创作并维护的<a href="https://scholargeek.github.io/">scholargeek</a>博客采用<a href="http://creativecommons.org/licenses/by-nc-nd/4.0/">创作共用保留署名-非商业-禁止演绎4.0国际许可证</a>。</p><p>本文首发于<a href="https://scholargeek.github.io/">Scholar’s Blog</a>博客，版权所有，侵权必究。</p><p>本文永久链接：<a href="https://scholargeek.github.io/2023/02/07/MySQL4/">https://scholargeek.github.io/2023/02/07/MySQL4/</a></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;数据库设计&quot;&gt;&lt;a href=&quot;#数据库设计&quot; class=&quot;headerlink&quot; title=&quot;数据库设计&quot;&gt;&lt;/a&gt;数据库设计&lt;/h1&gt;&lt;p&gt;　　数据库设计指对于一个给定的应用环境，构造（设计）优化的数据库逻辑模式和物理结构，并据此建立数据库及其应用系统，使之能够有效地存储和管理数据，满足各种用户的应用需求，包括信息管理要求和数据操作要求。&lt;br&gt;　　数据库设计的目标：是为用户和各种应用系统提供一个信息基础设施和高效率的运行环境 。数据库设计的基本任务：是根据用户的信息需求、处理需求和数据库的支持环境(包括硬件、操作系统和DBMS)，设计出数据库模式(包括外模式、逻辑模式和内模式)及其典型的应用程序。&lt;/p&gt;</summary>
    
    
    
    <category term="编程" scheme="https://scholargeek.github.io/categories/Programming/"/>
    
    
    <category term="MySQL" scheme="https://scholargeek.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>数据库学习3</title>
    <link href="https://scholargeek.github.io/2023/02/05/MySQL3/"/>
    <id>https://scholargeek.github.io/2023/02/05/MySQL3/</id>
    <published>2023-02-05T00:28:08.000Z</published>
    <updated>2023-02-05T00:28:08.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="MySQL高级查询"><a href="#MySQL高级查询" class="headerlink" title="MySQL高级查询"></a>MySQL高级查询</h1><p>　　本文将简述MySQL高级查询基本语法，如 “常用日期函数”、“外连接查询”、“交叉连接”、“自查询”、“行列转换”。</p><span id="more"></span><h2 id="常用日期函数"><a href="#常用日期函数" class="headerlink" title="常用日期函数"></a>常用日期函数</h2><p>　　MySQL中的常用日期函数如下：</p><table><thead><tr><th>函数</th><th>描述</th></tr></thead><tbody><tr><td>NOW()</td><td>返回当前的日期和时间</td></tr><tr><td>YEAR(d)</td><td>返回年份</td></tr><tr><td>QUARTER(d)</td><td>返回日期d是第几季节，返回 1 到 4</td></tr><tr><td>MONTH(d)</td><td>返回日期d中的月份值，1 到 12</td></tr><tr><td>WEEK(d)</td><td>计算日期 d 是本年的第几个星期，范围是 0 到 53</td></tr><tr><td>DAYOFMONTH(d)</td><td>计算日期 d 是本月的第几天</td></tr><tr><td>DAY(d)</td><td>返回日期值 d 的日期部分</td></tr><tr><td>HOUR(t)</td><td>返回 t 中的小时值</td></tr><tr><td>MINUTE(t)</td><td>返回 t 中的分钟值</td></tr><tr><td>SECOND(t)</td><td>返回 t 中的秒钟值</td></tr><tr><td>CURDATE()</td><td>返回当前的日期</td></tr><tr><td>CURTIME()</td><td>返回当前的时间</td></tr><tr><td>DATE()</td><td>提取日期或日期&#x2F;时间表达式的日期部分</td></tr><tr><td>EXTRACT()</td><td>返回日期&#x2F;时间按的单独部分</td></tr><tr><td>DATE_ADD()</td><td>给日期添加指定的时间间隔</td></tr><tr><td>DATE_SUB()</td><td>从日期减去指定的时间间隔</td></tr><tr><td>DATEDIFF()</td><td>返回两个日期之间的天数</td></tr><tr><td>TIMESTAMPDIFF(unit,datetime_expr1,datetime_expr2)</td><td>返回 datetime_expr2 − datetime_expr1 的时间差</td></tr><tr><td>DATE_FORMAT()</td><td>用不同的格式显示日期&#x2F;时间</td></tr></tbody></table><h2 id="外连接查询"><a href="#外连接查询" class="headerlink" title="外连接查询"></a>外连接查询</h2><p>　　外连接即合并具有同一列的两个以上的表的行，结果集中除了包含一个表与另一个表匹配的行之外，还查询到了左表或右表中不匹配的行。外连接又分为左外连接、右外连接、全连接。</p><p>●左外连接：两个表在连接过程中除了返回满足连接条件的行以外，还返回左表中不满足条件的行。<br>左外连接语法如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">from</span> a_table a <span class="keyword">left</span> <span class="keyword">join</span> b_table b <span class="keyword">on</span> a.a_id <span class="operator">=</span> b.b_id;</span><br></pre></td></tr></table></figure><p>●右外连接：两个表在连接过程中除了返回满足连接条件的行以外，还返回右表中不满足条件的行。<br>右外连接语法如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">from</span> a_table a <span class="keyword">right</span> <span class="keyword">join</span> b_table b <span class="keyword">on</span> a.a_id <span class="operator">=</span> b.b_id;</span><br></pre></td></tr></table></figure><p>●全连接：两个表在连接过程中除了返回满足连接条件的行以外，还返回左表和右表中不满足条件的行。(MySQL暂不支持这种语句，不过可使用union将两个结果集“堆一起”，利用左连接，右连接分两次将数据取出，然后用union将数据合并去重。)<br>列如：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">from</span> a_table a <span class="keyword">left</span> <span class="keyword">join</span> b_table b <span class="keyword">on</span> a.a_id <span class="operator">=</span> b.b_id;</span><br><span class="line"><span class="keyword">union</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">from</span> a_table a <span class="keyword">right</span> <span class="keyword">join</span> b_table b <span class="keyword">on</span> a.a_id <span class="operator">=</span> b.b_id;</span><br></pre></td></tr></table></figure><p><strong>例：</strong>查询所有的班级及学生信息，没有学生的班级也显示。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 左外连接</span></span><br><span class="line"><span class="keyword">SELECT</span> c.bjname,s.stuName</span><br><span class="line"><span class="keyword">FROM</span> classes c <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> student s <span class="keyword">ON</span> c.bjid<span class="operator">=</span>s.bjid</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 右外连接</span></span><br><span class="line"><span class="keyword">SELECT</span> c.bjname,s.stuName</span><br><span class="line"><span class="keyword">FROM</span> student s <span class="keyword">RIGHT</span> <span class="keyword">JOIN</span> classes c <span class="keyword">ON</span> s.bjid<span class="operator">=</span>c.bjid</span><br></pre></td></tr></table></figure><h2 id="交叉连接"><a href="#交叉连接" class="headerlink" title="交叉连接"></a>交叉连接</h2><p>　　交叉连接即返回两个表的笛卡尔乘积，作用就是计算两个表之间每个可能的组合，结果集中的记录数等于两张表各自记录数的乘积。一般使用<code>CROSS JOIN</code>连接两张表进行交叉连接。<br>语法如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> T1 <span class="keyword">CROSS</span> <span class="keyword">JOIN</span> T2</span><br></pre></td></tr></table></figure><p><strong>例：</strong>假设每个学生都学习每门必修课，显示学生和课程名。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> s.stuName,c.cname</span><br><span class="line"><span class="keyword">FROM</span> student s <span class="keyword">CROSS</span> <span class="keyword">JOIN</span> course c</span><br></pre></td></tr></table></figure><p><strong>例：</strong>用笛卡儿积查询所有学生姓名、课程名称及分数，将没有成绩的分数显示为0分。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> s.stuName,c.cname,IFNULL(g.score,<span class="number">0</span>)</span><br><span class="line"><span class="keyword">FROM</span> student s <span class="keyword">CROSS</span> <span class="keyword">JOIN</span> course c <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> grade g</span><br><span class="line"><span class="keyword">ON</span> s.stuId<span class="operator">=</span>g.stuid <span class="keyword">AND</span> c.cid<span class="operator">=</span>g.cid</span><br></pre></td></tr></table></figure><h2 id="自查询"><a href="#自查询" class="headerlink" title="自查询"></a>自查询</h2><p>　　某些情况下需要对一张表内的数据进行对比，获得各列层次关系，而通过一般的SQL写法，可能需要通过写多个子查询的方式才能解决，但用自连接查询可以轻松解决。自连接查询是指使用表的别名实现表与其自身连接的查询方法。</p><p><strong>例：</strong>在学生表中查询李得胜同学的同乡有哪些人。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> s2.stuName</span><br><span class="line"><span class="keyword">FROM</span> student s1,student s2</span><br><span class="line"><span class="keyword">WHERE</span> s1.stuAddress<span class="operator">=</span>s2.stuAddress <span class="keyword">AND</span> s1.stuName<span class="operator">=</span><span class="string">&#x27;李得胜&#x27;</span> <span class="keyword">AND</span> s2.stuName<span class="operator">&lt;&gt;</span><span class="string">&#x27;李得胜&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="行列转换"><a href="#行列转换" class="headerlink" title="行列转换"></a>行列转换</h2><p>　　实际应用中可能需要把表的某些行转换成列，或者把列转换成行的情况。如下图例：<br><img src="https://s3.bmp.ovh/imgs/2024/04/07/aab8645dd982edbc.png" alt="SQL行列转换例子"></p><p><strong>例：</strong>查询学生姓名课程和成绩并行列转换，使用<code>case ...  when  ... then ... else ... end</code>方法解如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> name,<span class="built_in">SUM</span>(<span class="keyword">CASE</span> <span class="keyword">WHEN</span> course<span class="operator">=</span><span class="string">&#x27;软件工程&#x27;</span> <span class="keyword">THEN</span> score <span class="keyword">ELSE</span> <span class="number">0</span> <span class="keyword">END</span>) <span class="keyword">AS</span> &quot;软件工程&quot;,</span><br><span class="line">            <span class="built_in">SUM</span>(<span class="keyword">CASE</span> <span class="keyword">WHEN</span> course<span class="operator">=</span><span class="string">&#x27;计算机技术&#x27;</span> <span class="keyword">THEN</span> score <span class="keyword">ELSE</span> <span class="number">0</span> <span class="keyword">END</span>) <span class="keyword">AS</span> &quot;计算机技术&quot;,</span><br><span class="line">            <span class="built_in">SUM</span>(<span class="keyword">CASE</span> <span class="keyword">WHEN</span> course<span class="operator">=</span><span class="string">&#x27;物联网工程&#x27;</span> <span class="keyword">THEN</span> score <span class="keyword">ELSE</span> <span class="number">0</span> <span class="keyword">END</span>) <span class="keyword">AS</span> &quot;物联网工程&quot;</span><br><span class="line"><span class="keyword">FROM</span> student</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> name</span><br></pre></td></tr></table></figure><hr><p><strong>版权声明</strong></p><p><img src="/images/cc.png"></p><p><a href="https://scholargeek.github.io/">Scholar’s Blog</a> by <a href="https://scholargeek.github.io/About/">scholargeek</a> is licensed under a <a href="http://creativecommons.org/licenses/by-nc-nd/4.0/">Creative Commons BY-NC-ND 4.0 International License</a>.<br>由<a href="https://scholargeek.github.io/About/">董仕麟</a>创作并维护的<a href="https://scholargeek.github.io/">scholargeek</a>博客采用<a href="http://creativecommons.org/licenses/by-nc-nd/4.0/">创作共用保留署名-非商业-禁止演绎4.0国际许可证</a>。</p><p>本文首发于<a href="https://scholargeek.github.io/">Scholar’s Blog</a>博客，版权所有，侵权必究。</p><p>本文永久链接：<a href="https://scholargeek.github.io/2023/02/05/MySQL3/">https://scholargeek.github.io/2023/02/05/MySQL3/</a></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;MySQL高级查询&quot;&gt;&lt;a href=&quot;#MySQL高级查询&quot; class=&quot;headerlink&quot; title=&quot;MySQL高级查询&quot;&gt;&lt;/a&gt;MySQL高级查询&lt;/h1&gt;&lt;p&gt;　　本文将简述MySQL高级查询基本语法，如 “常用日期函数”、“外连接查询”、“交叉连接”、“自查询”、“行列转换”。&lt;/p&gt;</summary>
    
    
    
    <category term="编程" scheme="https://scholargeek.github.io/categories/Programming/"/>
    
    
    <category term="MySQL" scheme="https://scholargeek.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>数据库学习2</title>
    <link href="https://scholargeek.github.io/2023/02/03/MySQL2/"/>
    <id>https://scholargeek.github.io/2023/02/03/MySQL2/</id>
    <published>2023-02-03T00:28:08.000Z</published>
    <updated>2023-02-03T00:28:08.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="MySQL进阶"><a href="#MySQL进阶" class="headerlink" title="MySQL进阶"></a>MySQL进阶</h1><p>　　本文将简述MySQL进阶查询基本语法，如 “AS用法”、“条件判断”、“限制结果条目”、“聚合函数”、“排序”、“分组统计”、“多表查询”。</p><span id="more"></span><h2 id="AS用法与条件替换"><a href="#AS用法与条件替换" class="headerlink" title="AS用法与条件替换"></a>AS用法与条件替换</h2><p>　　关键字AS用来设置别名。<br>●使用AS语句设置别名时，关键字AS可省略。<br>●设置别名时，保证不能与库中其他表或字段名起冲突。</p><p>　　条件判断(CASE WHEN XX THEN XX1 ELSE XX2 END)用于将结果集中的数据根据条件替换为指定字符。<br>●如果字段值XX为真，则返回结果XX1，否则返回结果XX2。</p><p><strong>例：</strong>查询地址为上海的员工姓名和性别，性别要求F显示为女而M显示为男。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 条件替换即若性别为F显示女否则显示男，将字段重命名为sex</span></span><br><span class="line"><span class="keyword">SELECT</span> ename,(<span class="keyword">CASE</span> <span class="keyword">WHEN</span> sex<span class="operator">=</span><span class="string">&#x27;F&#x27;</span> <span class="keyword">THEN</span> <span class="string">&#x27;女&#x27;</span> <span class="keyword">ELSE</span> <span class="string">&#x27;男&#x27;</span> <span class="keyword">END</span>) <span class="keyword">AS</span> sex</span><br><span class="line"><span class="keyword">FROM</span> emp</span><br><span class="line"><span class="keyword">WHERE</span> address<span class="operator">=</span><span class="string">&#x27;上海&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="限制结果条目"><a href="#限制结果条目" class="headerlink" title="限制结果条目"></a>限制结果条目</h2><p>　　<code>LIMIT [offset,] number</code><br>　　LIMIT的第一个参数是位置偏移量（可选参数），即设置 MySQL 从哪一行开始显示，第二个参数是设置返回记录行的最大数目。<br>●offset作为可选参数，第一条记录的位置偏移量为0。<br>●返回SELECT查询结果的前几行或指定开始行显示条目数。</p><p><strong>例：</strong>查询学生表信息3-6行的姓名与年龄。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询3-6行数据即 偏移量为3-1，显示数量为6-3+1</span></span><br><span class="line"><span class="keyword">SELECT</span> stuName,stuAge</span><br><span class="line"><span class="keyword">FROM</span> student</span><br><span class="line">LIMIT <span class="number">2</span>,<span class="number">4</span></span><br></pre></td></tr></table></figure><h2 id="聚合函数"><a href="#聚合函数" class="headerlink" title="聚合函数"></a>聚合函数</h2><p>　　聚合函数是对表中数据记录进行集中概括而设计的一类函数，常用聚合函数有平均值、最大值、最小值、总和、计数等。<br>●avg(）返回指定列的平均值<br>●max(）返回指定列的最大值<br>●min(）返回指定列的最小值<br>●sum(）返回指定列的所有值之和<br>●count(）返回指定列中非NULL值的个数</p><p><strong>例：</strong>查询计算机专业学生最大年龄、最小年龄、平均年龄、总年龄、总人数。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">MAX</span>(stuAge),<span class="built_in">MIN</span>(stuAge),<span class="built_in">AVG</span>(stuAge),<span class="built_in">SUM</span>(stuAge),<span class="built_in">COUNT</span>(<span class="operator">*</span>)</span><br><span class="line"><span class="keyword">FROM</span> student</span><br><span class="line"><span class="keyword">WHERE</span> stuMajor<span class="operator">=</span><span class="string">&#x27;计算机&#x27;</span>;</span><br></pre></td></tr></table></figure><h2 id="去重与条件NULL关键字"><a href="#去重与条件NULL关键字" class="headerlink" title="去重与条件NULL关键字"></a>去重与条件NULL关键字</h2><p>　　查询数据时若显示重复的行记录，删除重复行可在SELECT语句中使用DISTINCT子句。语法如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> columns</span><br><span class="line"><span class="keyword">FROM</span> table_name</span><br><span class="line"><span class="keyword">WHERE</span> where_conditions;</span><br></pre></td></tr></table></figure><p><strong>例：</strong>查询所有的员工来自那些城市（不能重复显示地名且NULL不显示）。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> city </span><br><span class="line"><span class="keyword">FROM</span> emp</span><br><span class="line"><span class="keyword">WHERE</span> city <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>;</span><br></pre></td></tr></table></figure><p>　　MySQL中处理NULL必须使用 IS NULL 和 IS NOT NULL 运算符。<br>　　MySQL使用 SQL SELECT 命令及 WHERE 子句来读取数据表中的数据,但是当提供的查询条件字段为 NULL 时，该命令可能就无法正常工作。为了处理这种情况，MySQL提供了三大运算符:<br>● IS NULL: 当列的值是 NULL,此运算符返回 true。<br>● IS NOT NULL: 当列的值不为 NULL, 运算符返回 true。<br>● &lt;&#x3D;&gt;: 比较操作符（不同于 &#x3D; 运算符），当比较的的两个值相等或者都为 NULL 时返回 true。</p><h2 id="NULL条件函数"><a href="#NULL条件函数" class="headerlink" title="NULL条件函数"></a>NULL条件函数</h2><p>　　IF()、IFNULL()、NULLIF()、ISNULL()函数的使用。<br>●IF()函数<br><code>IF(expr1,expr2,expr3)</code><br>如果expr1的值为true，则返回expr2的值，如果expr1的值为false，则返回expr3的值。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> IF(<span class="literal">TRUE</span>,<span class="string">&#x27;A&#x27;</span>,<span class="string">&#x27;B&#x27;</span>);    <span class="comment">-- 输出结果：A</span></span><br><span class="line"><span class="keyword">SELECT</span> IF(<span class="literal">FALSE</span>,<span class="string">&#x27;A&#x27;</span>,<span class="string">&#x27;B&#x27;</span>);   <span class="comment">-- 输出结果：B</span></span><br></pre></td></tr></table></figure><p>●IFNULL()函数<br><code>IFNULL(expr1,expr2)</code><br>如果expr1的值为null，则返回expr2的值，如果expr1的值不为null，则返回expr1的值。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> IFNULL(<span class="keyword">NULL</span>,<span class="string">&#x27;A&#x27;</span>);    <span class="comment">-- 输出结果：A</span></span><br><span class="line"><span class="keyword">SELECT</span> IFNULL(<span class="string">&#x27;HELLO&#x27;</span>,<span class="string">&#x27;A&#x27;</span>); <span class="comment">-- 输出结果：HELLO</span></span><br></pre></td></tr></table></figure><p>●NULLIF()函数<br><code>NULLIF(expr1,expr2)</code><br>如果expr1&#x3D;expr2成立，那么返回值为null，否则返回值为expr1的值。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">NULLIF</span>(<span class="string">&#x27;A&#x27;</span>,<span class="string">&#x27;A&#x27;</span>);     <span class="comment">-- 输出结果：null</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">NULLIF</span>(<span class="string">&#x27;A&#x27;</span>,<span class="string">&#x27;B&#x27;</span>);     <span class="comment">-- 输出结果：A</span></span><br></pre></td></tr></table></figure><p>●ISNULL()函数<br><code>ISNULL(expr)</code><br>如果expr的值为null，则返回1，如果expr1的值不为null，则返回0。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> ISNULL(<span class="keyword">NULL</span>);        <span class="comment">-- 输出结果：1</span></span><br><span class="line"><span class="keyword">SELECT</span> ISNULL(<span class="string">&#x27;HELLO&#x27;</span>);     <span class="comment">-- 输出结果：0</span></span><br></pre></td></tr></table></figure><h2 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h2><p>　　按关键字排序查询数据时使用<code>ORDER BY</code>语句来实现排序。语法如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> column1, column2,…</span><br><span class="line"><span class="keyword">FROM</span> table_name </span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> column1, column2,…<span class="keyword">ASC</span><span class="operator">|</span><span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure><p>●排序可针对一个或多个字段<br>●ASC：升序，默认排序方式<br>●DESC：降序</p><p><strong>例：</strong>查询产品表所有信息，根据库存由小到大排列。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> productID,pName,price,pes</span><br><span class="line"><span class="keyword">FROM</span> product</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> pes <span class="keyword">ASC</span>;</span><br></pre></td></tr></table></figure><h2 id="分组统计"><a href="#分组统计" class="headerlink" title="分组统计"></a>分组统计</h2><p>　　查询数据结果同时包括普通字段和聚合函数需进行分组统计，这时使用<code>GROUP BY</code>语句对结果进行分组。语法如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> column_name, aggregate_function(column_name)</span><br><span class="line"><span class="keyword">FROM</span> table_name </span><br><span class="line"><span class="keyword">WHERE</span> column_name operator <span class="keyword">value</span></span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> column_name;</span><br></pre></td></tr></table></figure><p>●通常结合聚合函数一起使用<br>●以按一个或多个字段对结果进行分组</p><p><strong>例：</strong>查询员工表每个专业的员工总人数，显示专业名称和总人数。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> major,<span class="built_in">COUNT</span>(<span class="operator">*</span>)</span><br><span class="line"><span class="keyword">FROM</span> emp</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> major</span><br></pre></td></tr></table></figure><p>　　HAVING子句的使用。在SELECT语句中使用HAVING子句来指定一组行或聚合的过滤条件。HAVING子句通常与GROUP BY子句一起使用，以根据指定的条件过滤分组。如果省略GROUP BY子句，则HAVING子句的行为与WHERE子句类似。<br>　　注意：HAVING子句将过滤条件应用于每组分行，而WHERE子句将过滤条件应用于每个单独的行。</p><p><strong>例：</strong>查询除北京外的每个城市的客户总人数，只显示1人以上的城市名称和总人数。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> cAddress,<span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">AS</span> TotalNumber</span><br><span class="line"><span class="keyword">FROM</span> customer</span><br><span class="line"><span class="keyword">WHERE</span> cAddress<span class="operator">&lt;&gt;</span><span class="string">&#x27;北京&#x27;</span></span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> cAddress</span><br><span class="line"><span class="keyword">HAVING</span> TotalNumber<span class="operator">&gt;</span><span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="多表查询"><a href="#多表查询" class="headerlink" title="多表查询"></a>多表查询</h2><p>　　多表查询常使用内连接即查询操作列出与连接条件匹配的数据行。语法如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 法1</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">column</span> name(s) </span><br><span class="line"><span class="keyword">FROM</span> table1 <span class="keyword">INNER</span> <span class="keyword">JOIN</span> table2 <span class="keyword">ON</span> table1.column_name <span class="operator">=</span> table2.column_name;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 法2</span></span><br><span class="line"><span class="keyword">SELECT</span> T1.column1, T2.column2,…</span><br><span class="line"><span class="keyword">FROM</span> table_name1 <span class="keyword">AS</span> T1,table_name2 <span class="keyword">AS</span> T2,…</span><br><span class="line"><span class="keyword">WHERE</span> T1.column_keyname<span class="operator">=</span>T2.column_keyname</span><br></pre></td></tr></table></figure><p><strong>例：</strong>查询IOT2020班和IOT2022班的软件方向的班级名称和学生姓名。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> c.bjname,s.stuName</span><br><span class="line"><span class="keyword">FROM</span> classes c,student s</span><br><span class="line"><span class="keyword">WHERE</span> c.bjid<span class="operator">=</span>s.bjid <span class="keyword">AND</span> c.bjname <span class="keyword">IN</span> (<span class="string">&#x27;IOT2020&#x27;</span>,<span class="string">&#x27;IOT2022&#x27;</span>) <span class="keyword">AND</span> s.stuMajor<span class="operator">=</span><span class="string">&#x27;软件&#x27;</span>;</span><br></pre></td></tr></table></figure><h1 id="SQL查询方法"><a href="#SQL查询方法" class="headerlink" title="SQL查询方法"></a>SQL查询方法</h1><p>①搭建查询结构：<code>SELECT ... FROM ... WHERE ...</code><br>②找出需要查询的表名写在FROM后<br>③建立关系即将各表外键进行内连接<br>④将需求筛选条件写在WHERE后<br>⑤将需求显示的要素写在SELECT后</p><hr><p><strong>版权声明</strong></p><p><img src="/images/cc.png"></p><p><a href="https://scholargeek.github.io/">Scholar’s Blog</a> by <a href="https://scholargeek.github.io/About/">scholargeek</a> is licensed under a <a href="http://creativecommons.org/licenses/by-nc-nd/4.0/">Creative Commons BY-NC-ND 4.0 International License</a>.<br>由<a href="https://scholargeek.github.io/About/">董仕麟</a>创作并维护的<a href="https://scholargeek.github.io/">scholargeek</a>博客采用<a href="http://creativecommons.org/licenses/by-nc-nd/4.0/">创作共用保留署名-非商业-禁止演绎4.0国际许可证</a>。</p><p>本文首发于<a href="https://scholargeek.github.io/">Scholar’s Blog</a>博客，版权所有，侵权必究。</p><p>本文永久链接：<a href="https://scholargeek.github.io/2023/02/03/MySQL2/">https://scholargeek.github.io/2023/02/03/MySQL2/</a></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;MySQL进阶&quot;&gt;&lt;a href=&quot;#MySQL进阶&quot; class=&quot;headerlink&quot; title=&quot;MySQL进阶&quot;&gt;&lt;/a&gt;MySQL进阶&lt;/h1&gt;&lt;p&gt;　　本文将简述MySQL进阶查询基本语法，如 “AS用法”、“条件判断”、“限制结果条目”、“聚合函数”、“排序”、“分组统计”、“多表查询”。&lt;/p&gt;</summary>
    
    
    
    <category term="编程" scheme="https://scholargeek.github.io/categories/Programming/"/>
    
    
    <category term="MySQL" scheme="https://scholargeek.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>数据库学习1</title>
    <link href="https://scholargeek.github.io/2023/02/01/MySQL1/"/>
    <id>https://scholargeek.github.io/2023/02/01/MySQL1/</id>
    <published>2023-02-01T00:28:08.000Z</published>
    <updated>2023-02-01T00:28:08.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="MySQL数据管理"><a href="#MySQL数据管理" class="headerlink" title="MySQL数据管理"></a>MySQL数据管理</h1><p>　　管理MySQL数据库可以使用命令窗口(cmd)，也可以使用第三方专业数据库管理工具如(Navicat)。Navicat 作为一款为 MySQL 设计的可视化数据库 GUI 管理工具，使得可以使用图形化界面远程管理MySQL 数据库。在管理数据库时常用的操作有增删改查，本文将简述数据库基础管理四种操作的SQL语法。</p><span id="more"></span><h2 id="Navicat简单用法"><a href="#Navicat简单用法" class="headerlink" title="Navicat简单用法"></a>Navicat简单用法</h2><h3 id="连接数据库"><a href="#连接数据库" class="headerlink" title="连接数据库"></a>连接数据库</h3><p>　　从Navicat官网 <a href="http://www.navicat.com.cn/">http://www.navicat.com.cn/</a> 下载并安装软件。打开Navicat ，点击<strong>连接</strong>按钮，选择数据库<strong>MySQL</strong>，填写连接的数据库服务器信息，点击<strong>测试连接</strong>按钮检查连接是否成功。<br>①选择数据库类型<br><img src="https://s3.bmp.ovh/imgs/2024/03/22/43b3d4c7f998f8e6.png" alt="Navicat连接数据库"><br>②填写数据库服务器连接信息<br><img src="https://s3.bmp.ovh/imgs/2024/03/22/c31ce5d7f4180129.png" alt="Navicat连接数据库1"><br>③测试数据库服务器能否连接<br><img src="https://s3.bmp.ovh/imgs/2024/03/22/a5eb60bbd667e5f1.png" alt="Navicat连接数据库2"></p><h3 id="查询数据"><a href="#查询数据" class="headerlink" title="查询数据"></a>查询数据</h3><p>　　在Navicat可以使用鼠标点击软件菜单栏按钮完成简单的数据查询，也可以使用SQL语句在软件查询命令窗口查询数据。使用命令窗口查询数据方法如下：<br>①新建查询窗口<br><img src="https://s3.bmp.ovh/imgs/2024/03/22/16fd1b607e2c38ad.png" alt="Navicat查询数据库"><br>②设置查询数据库参数并输入SQL语句，选择要执行的语句后点击运行按钮即可执行。<br><img src="https://s3.bmp.ovh/imgs/2024/03/22/2dedc7ea1b4883fe.png" alt="Navicat查询数据库1"></p><h2 id="数据库的增删改查"><a href="#数据库的增删改查" class="headerlink" title="数据库的增删改查"></a>数据库的增删改查</h2><h3 id="插入数据"><a href="#插入数据" class="headerlink" title="插入数据"></a>插入数据</h3><p>　　●语法：<code>INSERT INTO 表名(字段1，字段2，字段3...) VALUES(值1，值2，值3...);</code><br><strong>例：</strong>向学生表(student)中录入一名年龄是25岁 籍贯为上海 专业为计算机 出生于1999-1-6 名叫天明 在3号班级学习的男生信息。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student(stuAge,stuAddress,stuMajor,stuBirthday,stuName,bjid,stuSex) <span class="keyword">VALUES</span>(<span class="number">25</span>,<span class="string">&#x27;上海&#x27;</span>,<span class="string">&#x27;计算机&#x27;</span>,<span class="string">&#x27;1999-1-6&#x27;</span>,<span class="string">&#x27;天明&#x27;</span>,<span class="number">3</span>,<span class="string">&#x27;男&#x27;</span>);</span><br></pre></td></tr></table></figure><h3 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h3><p>　　●语法：<code>DELETE FROM 表名 WHERE 条件</code><br><strong>例：</strong>删除名字中包含刁并且年龄在12-20之间的学生信息。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> student</span><br><span class="line"><span class="keyword">WHERE</span> stuName <span class="keyword">LIKE</span> <span class="string">&#x27;%刁%&#x27;</span> <span class="keyword">AND</span> stuAge <span class="keyword">BETWEEN</span> <span class="number">12</span> <span class="keyword">AND</span> <span class="number">20</span></span><br></pre></td></tr></table></figure><h3 id="更改数据"><a href="#更改数据" class="headerlink" title="更改数据"></a>更改数据</h3><p>　　●语法：<code>UPDATE 表名 SET 字段1=新值1,字段2=新值2,... WHERE 条件</code><br><strong>例：</strong>修改班级表(classes)编号为3的班级名称为IT2022。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> classes</span><br><span class="line"><span class="keyword">SET</span> bjname <span class="operator">=</span> <span class="string">&#x27;IT2022&#x27;</span></span><br><span class="line"><span class="keyword">WHERE</span> bjid <span class="operator">=</span> <span class="number">3</span></span><br></pre></td></tr></table></figure><h3 id="查询数据-1"><a href="#查询数据-1" class="headerlink" title="查询数据"></a>查询数据</h3><p>　　●语法：<code>SELECT 查询字段1,查询字段2,查询字段3 FROM 表1,表2... WHERE 条件</code><br><strong>例：</strong>查询分数表(grade)不及格的分数信息。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> sccid,stuid,cid,score</span><br><span class="line"><span class="keyword">FROM</span> grade</span><br><span class="line"><span class="keyword">WHERE</span> score <span class="operator">&lt;</span> <span class="number">60</span></span><br></pre></td></tr></table></figure><p>　　●模糊查询LIKE子句通配符解释</p><table><thead><tr><th>符号</th><th>描述</th><th>例子</th></tr></thead><tbody><tr><td>%</td><td>表示任意 0 个或多个字符，可匹配任意类型和长度的字符。</td><td><code>name like &#39;%刁%&#39;</code></td></tr><tr><td>_</td><td>表示任意单个字符。匹配单个任意字符，它常用来限制表达式的字符长度语句。</td><td><code>name like &#39;王_&#39;</code></td></tr><tr><td>[]</td><td>表示括号内所列字符中的一个(类似正则表达式),指定字符范围匹配对象为它们中的任一个。</td><td><code>TEL like &#39;152%[1-6]&#39; </code></td></tr><tr><td>[^]</td><td>表示不在括号所列之内的单个字符,要求所匹配对象为指定字符以外的任一个字符。</td><td><code>TEL like &#39;152%[^4]&#39;</code></td></tr></tbody></table><h3 id="MySQL运算符"><a href="#MySQL运算符" class="headerlink" title="MySQL运算符"></a>MySQL运算符</h3><p>　　MySQL主要有四种运算符：<strong>算术运算符</strong> <strong>比较运算符</strong> <strong>逻辑运算符</strong> <strong>位运算符</strong></p><p>●<strong>算术运算符</strong></p><table><thead><tr><th>运算符</th><th>作用</th></tr></thead><tbody><tr><td>+</td><td>加法</td></tr><tr><td>-</td><td>减法</td></tr><tr><td>*</td><td>乘法</td></tr><tr><td>&#x2F; 或 DIV</td><td>除法</td></tr><tr><td>% 或 MOD</td><td>取余</td></tr><tr><td>在除法运算和模运算中，如果除数为0，将是非法除数，返回结果为NULL。</td><td></td></tr></tbody></table><p>●<strong>比较运算符</strong></p><table><thead><tr><th>符号</th><th>描述</th><th>备注</th></tr></thead><tbody><tr><td>&#x3D;</td><td>等于</td><td></td></tr><tr><td>&lt;&gt;, !&#x3D;</td><td>不等于</td><td></td></tr><tr><td>&gt;</td><td>大于</td><td></td></tr><tr><td>&lt;</td><td>小于</td><td></td></tr><tr><td>&lt;&#x3D;</td><td>小于等于</td><td></td></tr><tr><td>&gt;&#x3D;</td><td>大于等于</td><td></td></tr><tr><td>BETWEEN</td><td>在两值之间</td><td>&gt;&#x3D;min&amp;&amp;&lt;&#x3D;max</td></tr><tr><td>NOT BETWEEN</td><td>不在两值之间</td><td></td></tr><tr><td>IN</td><td>在集合中</td><td></td></tr><tr><td>NOT IN</td><td>不在集合中</td><td></td></tr><tr><td>&lt;&#x3D;&gt;</td><td>严格比较两个NULL值是否相等</td><td>两个操作码均为NULL时，其所得值为1；而当一个操作码为NULL时，其所得值为0</td></tr><tr><td>LIKE</td><td>模糊匹配</td><td></td></tr><tr><td>REGEXP 或 RLIKE</td><td>正则式匹配</td><td></td></tr><tr><td>IS NULL</td><td>为空</td><td></td></tr><tr><td>IS NOT NULL</td><td>不为空</td><td></td></tr></tbody></table><p>●<strong>逻辑运算符</strong></p><table><thead><tr><th>运算符号</th><th>作用</th></tr></thead><tbody><tr><td>NOT 或 !</td><td>逻辑非</td></tr><tr><td>AND</td><td>逻辑与</td></tr><tr><td>OR</td><td>逻辑或</td></tr><tr><td>XOR</td><td>逻辑异或</td></tr></tbody></table><p>●<strong>位运算符</strong></p><table><thead><tr><th>运算符号</th><th>作用</th></tr></thead><tbody><tr><td>&amp;</td><td>按位与</td></tr><tr><td></td><td></td></tr><tr><td>^</td><td>按位异或</td></tr><tr><td>!</td><td>取反</td></tr><tr><td>&lt;&lt;</td><td>左移</td></tr><tr><td>&gt;&gt;</td><td>右移</td></tr></tbody></table><hr><p><strong>版权声明</strong></p><p><img src="/images/cc.png"></p><p><a href="https://scholargeek.github.io/">Scholar’s Blog</a> by <a href="https://scholargeek.github.io/About/">scholargeek</a> is licensed under a <a href="http://creativecommons.org/licenses/by-nc-nd/4.0/">Creative Commons BY-NC-ND 4.0 International License</a>.<br>由<a href="https://scholargeek.github.io/About/">董仕麟</a>创作并维护的<a href="https://scholargeek.github.io/">scholargeek</a>博客采用<a href="http://creativecommons.org/licenses/by-nc-nd/4.0/">创作共用保留署名-非商业-禁止演绎4.0国际许可证</a>。</p><p>本文首发于<a href="https://scholargeek.github.io/">Scholar’s Blog</a>博客，版权所有，侵权必究。</p><p>本文永久链接：<a href="https://scholargeek.github.io/2023/02/01/MySQL1/">https://scholargeek.github.io/2023/02/01/MySQL1/</a></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;MySQL数据管理&quot;&gt;&lt;a href=&quot;#MySQL数据管理&quot; class=&quot;headerlink&quot; title=&quot;MySQL数据管理&quot;&gt;&lt;/a&gt;MySQL数据管理&lt;/h1&gt;&lt;p&gt;　　管理MySQL数据库可以使用命令窗口(cmd)，也可以使用第三方专业数据库管理工具如(Navicat)。Navicat 作为一款为 MySQL 设计的可视化数据库 GUI 管理工具，使得可以使用图形化界面远程管理MySQL 数据库。在管理数据库时常用的操作有增删改查，本文将简述数据库基础管理四种操作的SQL语法。&lt;/p&gt;</summary>
    
    
    
    <category term="编程" scheme="https://scholargeek.github.io/categories/Programming/"/>
    
    
    <category term="MySQL" scheme="https://scholargeek.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>数据库学习</title>
    <link href="https://scholargeek.github.io/2022/12/30/MySQL/"/>
    <id>https://scholargeek.github.io/2022/12/30/MySQL/</id>
    <published>2022-12-30T00:28:08.000Z</published>
    <updated>2022-12-30T00:28:08.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="数据库基本概念与MySQL入门"><a href="#数据库基本概念与MySQL入门" class="headerlink" title="数据库基本概念与MySQL入门"></a>数据库基本概念与MySQL入门</h1><p>　　数据库可以看作电子化的文件柜——存储电子文件的处所。用户可以对文件中的资料执行新增、查询、更新、删除等操作。所谓“数据库”是以一定方式储存在一起、能予多个用户共享、具有尽可能小的冗余度、与应用程序彼此独立的数据集合。一个数据库由多个表空间(Tablespace)构成。</p><span id="more"></span><h2 id="数据库基本概念"><a href="#数据库基本概念" class="headerlink" title="数据库基本概念"></a>数据库基本概念</h2><p>　　数据库就是”数据“的仓库，一种用于存储信息和数据的软件，它由表、关系、及操作对象组成，数据放在表中。数据库服务器即安装了数据库软件的计算机，一般以主从式架构提供数据库服务。<br><img src="https://s3.bmp.ovh/imgs/2024/03/20/78e8b6092568654a.png" alt="数据库服务器功能"><br><strong>应用程序</strong><br>作用：响应操作并显示结果，向数据库请求数据。<br>要求：美观并且操作简单方便。<br><strong>数据库服务器</strong><br>作用：存储数据、检索数据、生成新的数据。<br>要求：统一、安全、性能等。</p><h3 id="技术初衷"><a href="#技术初衷" class="headerlink" title="技术初衷"></a>技术初衷</h3><p>　　在操作系统出现之后，随着计算机应用范围的扩大、需要处理的数据迅速膨胀。最初，数据与程序一样，以简单的文件作为主要存储形式。以这种方式组织的数据在逻辑上更简单，但可扩展性差，访问这种数据的程序需要了解数据的具体组织格式。当系统数据量大或者用户访问量大时，应用程序还需要解决数据的完整性、一致性以及安全性等一系列的问题。因此，必须开发出一种系统软件，它应该能够像操作系统屏蔽了硬件访问复杂性那样，屏蔽数据访问的复杂性。由此产生了数据管理系统，即数据库。</p><h3 id="数据库管理系统"><a href="#数据库管理系统" class="headerlink" title="数据库管理系统"></a>数据库管理系统</h3><p>　　数据库管理系统(Database Management System)，简称DBMS。是为管理数据库而设计的电脑软件系统，一般具有存储、截取、安全保障、备份等基础功能。数据库管理系统可以依据它所支持的数据库模型来作分类，例如关系式、XML；或依据所支持的电脑类型来作分类，例如服务器聚类、移动电话；或依据所用查询语言来作分类，例如SQL、XQuery；或依据性能冲量重点来作分类，例如最大规模、最高执行速度；亦或其他的分类方式。不论使用哪种分类方式，一些DBMS能够跨类别，例如，同时支持多种查询语言。</p><h3 id="数据库的分类"><a href="#数据库的分类" class="headerlink" title="数据库的分类"></a>数据库的分类</h3><p>　　随着数据库技术与其他分支学科技术的结合，出现了多种新型数据库，例如：与分布处理技术结合产生的分布式数据库、与并行处理技术结合产生的并行数据库、与人工智能结合产生的演绎数据库、与多媒体技术结合产生的多媒体数据库。另外，数据库技术应用于特定的领域，出现了工程数据库、 地理数据库、统计数据库、空间数据库等特定领域数据库。<br>常见关系数据库:<br>MySQL   MariaDB   Percona Server   PostgreSQL   Microsoft Access   Microsoft SQL Server   Google Fusion Tables   FileMaker   Oracle数据库   Sybase   dBASE   Clipper   FoxPro   foshub<br>常见非关系型数据库(NoSQL):<br>BigTable(Google)   Cassandra   MongoDB   CouchDB   Redis   Apache Cassandra   Dynamo   LevelDB(Google)</p><h3 id="SQL简介"><a href="#SQL简介" class="headerlink" title="SQL简介"></a>SQL简介</h3><p>　　SQL(Structured Query Language)结构化查询语言是一种特定目的编程语言，用于管理关系数据库管理系统（RDBMS），或在关系流数据管理系统(RDSMS)中进行流处理。SQL基于关系代数和元组关系演算，包括一个数据定义语言和数据操纵语言。SQL的范围包括数据插入、查询、更新和删除，数据库模式创建和修改，以及数据访问控制。</p><h2 id="MySQL入门"><a href="#MySQL入门" class="headerlink" title="MySQL入门"></a>MySQL入门</h2><p>　　MySQL原本是一个开放源码的关系数据库管理系统，原开发者为瑞典的MySQL AB公司，该公司于2008年被昇阳微系统(Sun Microsystems)收购。2009年，甲骨文公司(Oracle)收购昇阳微系统公司，MySQL成为Oracle旗下产品。MySQL在过去由于性能高、成本低、可靠性好，已经成为最流行的开源数据库，因此被广泛地应用在Internet上的中小型网站中。随着MySQL的不断成熟，它也逐渐用于更多大规模网站和应用。非常流行的开源软件组合LAMP中的“M”指的就是MySQL。<br>官方网站:<a href="https://www.mysql.com/">https://www.mysql.com</a></p><h3 id="MySQL管理"><a href="#MySQL管理" class="headerlink" title="MySQL管理"></a>MySQL管理</h3><p>●使用命令行工具管理MySQL数据库（命令mysql和mysqladmin），也可以从MySQL的网站下载图形管理工具MySQL Workbench。<br>●Navicat是一套专为MySQL设计的强大数据库管理及开发工具。它可以用于任何版本的MySQL数据库，并支持大部分MySQL的功能，包括触发器、索引、查看等。<br>●phpMyAdmin是由PHP写成的MySQL数据库系统管理程序，让管理者可用Web接口管理MySQL数据库。借由此Web接口可以成为一个简易方式输入繁杂SQL语法的较佳途径，尤其要处理大量资料的导入及导出更为方便。其中一个更大的优势在于由于phpMyAdmin跟其他PHP程序一样在网页服务器上执行，但是可以在任何地方使用这些程序产生的HTML页面，也就是于远程管理MySQL数据库。使用phpMyAdmin就可以方便的建立、修改、删除数据库及资料表。</p><h3 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">-- 单行注释</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">-- 创建XX数据库</span></span><br><span class="line"><span class="keyword">CREATE</span> DATABASE XX;</span><br><span class="line"><span class="comment">-- 删除XX数据库</span></span><br><span class="line"><span class="keyword">DROP</span> DATABASE XX;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">新建两张表</span></span><br><span class="line"><span class="comment">班级表 （班级编号 班级名称）</span></span><br><span class="line"><span class="comment">学生表 （学生编号 学生姓名 学生年龄 生日 身高 班级编号）</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- PRIMARY KEY 主键</span></span><br><span class="line"><span class="comment">-- NOT NULL 数据必须插入，不能为空</span></span><br><span class="line"><span class="comment">-- COMMENT 注释</span></span><br><span class="line"><span class="comment">-- FOREIGN KEY 外键</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> classes</span><br><span class="line">(</span><br><span class="line">bjid <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY out_increment COMMENT<span class="string">&#x27;班级编号&#x27;</span>,</span><br><span class="line">bjname <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT<span class="string">&#x27;班级名称&#x27;</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> student</span><br><span class="line">(</span><br><span class="line">stuid <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY auto_increment COMMENT<span class="string">&#x27;学生编号&#x27;</span>,</span><br><span class="line">stuname <span class="type">VARCHAR</span>(<span class="number">40</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT<span class="string">&#x27;学生姓名&#x27;</span>,</span><br><span class="line">age <span class="type">INT</span> <span class="keyword">DEFAULT</span> <span class="number">3</span> COMMENT<span class="string">&#x27;年龄&#x27;</span>,</span><br><span class="line">birthday <span class="type">DATE</span> <span class="keyword">NULL</span> COMMENT<span class="string">&#x27;生日&#x27;</span>,</span><br><span class="line">height <span class="type">FLOAT</span> COMMENT<span class="string">&#x27;身高&#x27;</span>,</span><br><span class="line">bjid <span class="type">INT</span> COMMENT<span class="string">&#x27;班级编号&#x27;</span>,</span><br><span class="line"><span class="keyword">FOREIGN</span> KEY (bjid) <span class="keyword">REFERENCES</span> classes(bjid)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><hr><p><strong>版权声明</strong></p><p><img src="/images/cc.png"></p><p><a href="https://scholargeek.github.io/">Scholar’s Blog</a> by <a href="https://scholargeek.github.io/About/">scholargeek</a> is licensed under a <a href="http://creativecommons.org/licenses/by-nc-nd/4.0/">Creative Commons BY-NC-ND 4.0 International License</a>.<br>由<a href="https://scholargeek.github.io/About/">董仕麟</a>创作并维护的<a href="https://scholargeek.github.io/">scholargeek</a>博客采用<a href="http://creativecommons.org/licenses/by-nc-nd/4.0/">创作共用保留署名-非商业-禁止演绎4.0国际许可证</a>。</p><p>本文首发于<a href="https://scholargeek.github.io/">Scholar’s Blog</a>博客，版权所有，侵权必究。</p><p>本文永久链接：<a href="https://scholargeek.github.io/2022/12/30/MySQL/">https://scholargeek.github.io/2022/12/30/MySQL/</a></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;数据库基本概念与MySQL入门&quot;&gt;&lt;a href=&quot;#数据库基本概念与MySQL入门&quot; class=&quot;headerlink&quot; title=&quot;数据库基本概念与MySQL入门&quot;&gt;&lt;/a&gt;数据库基本概念与MySQL入门&lt;/h1&gt;&lt;p&gt;　　数据库可以看作电子化的文件柜——存储电子文件的处所。用户可以对文件中的资料执行新增、查询、更新、删除等操作。所谓“数据库”是以一定方式储存在一起、能予多个用户共享、具有尽可能小的冗余度、与应用程序彼此独立的数据集合。一个数据库由多个表空间(Tablespace)构成。&lt;/p&gt;</summary>
    
    
    
    <category term="编程" scheme="https://scholargeek.github.io/categories/Programming/"/>
    
    
    <category term="MySQL" scheme="https://scholargeek.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>考研日志二</title>
    <link href="https://scholargeek.github.io/2022/12/28/%E8%80%83%E7%A0%94%E5%BF%97%E4%BA%8C/"/>
    <id>https://scholargeek.github.io/2022/12/28/%E8%80%83%E7%A0%94%E5%BF%97%E4%BA%8C/</id>
    <published>2022-12-28T04:06:06.000Z</published>
    <updated>2022-12-28T04:06:28.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>由于考研失利，我的心境从低落恢复到正常，花费了几个月时间。这段时间是我人生最灰暗的时光，服用了药物后才渐渐好转。我在脑海中无数次构想考研的过程与结果，期望我能总结经验，争取上岸。当我再次选定考研目标院校时，非常无奈的选择了西北的学校，我定了个较低的目标；但却非常纠结，因为这和我当初励志离开西北的想法不同，但现在却为了上岸妥协了初衷，我无颜面对当初的自己。在无数个日夜中我不断纠结，看着时光流逝感到无奈，深感对自我掌控力的不足。<br>与过去复习过程类似，有种搬苞谷的感觉，怀疑不断打击着自信，直到把理想摧垮。后来逐渐发现考研需要的不仅是理想，考研需要的更是信念。唯有坚定的信念才能抵御困难的打击，只有不屈的意志才能克服险隘的阻挡。</p><pre><code>下定决心，排除万难。</code></pre><span id="more"></span><p>我为何考研？这个问题我曾思考了许久，因为我想弥补高考的失败，因为我想提高专业能力，因为我想有更广阔的未来。总之，我想无论成败我都要去考，不遗余力的考，不顾一切的考。<br>时间来到2022年12月，由于新冠疫情的影响，石城已封闭了3个月，现在逐渐解封，但却造成许多人患上了新冠奥密克戎。我正好在考前一天发烧，无奈地考虑到即使去了考场也无法完成考试，便放弃了，当了逃兵。到这里我心心念念的考研就告一段落了，我想我还没有一次全力以赴的参考，这就是我的遗憾吧。当有人问起我这些年的考研成绩，我只能说我正在准备中，希望我在新的一年中全力以赴，争取给自己一个满意的结果。</p><hr><p><strong>版权声明</strong></p><p><img src="/images/cc.png"></p><p><a href="https://scholargeek.github.io/">Scholar’s Blog</a> by <a href="https://scholargeek.github.io/About/">scholargeek</a> is licensed under a <a href="http://creativecommons.org/licenses/by-nc-nd/4.0/">Creative Commons BY-NC-ND 4.0 International License</a>.<br>由<a href="https://scholargeek.github.io/About/">董仕麟</a>创作并维护的<a href="https://scholargeek.github.io/">scholargeek</a>博客采用<a href="http://creativecommons.org/licenses/by-nc-nd/4.0/">创作共用保留署名-非商业-禁止演绎4.0国际许可证</a>。</p><p>本文首发于<a href="https://scholargeek.github.io/">Scholar’s Blog</a>博客，版权所有，侵权必究。</p><p>本文永久链接：<a href="https://scholargeek.github.io/2022/12/28/%E8%80%83%E7%A0%94%E5%BF%97%E4%BA%8C/">https://scholargeek.github.io/2022/12/28/%E8%80%83%E7%A0%94%E5%BF%97%E4%BA%8C/</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;由于考研失利，我的心境从低落恢复到正常，花费了几个月时间。这段时间是我人生最灰暗的时光，服用了药物后才渐渐好转。我在脑海中无数次构想考研的过程与结果，期望我能总结经验，争取上岸。当我再次选定考研目标院校时，非常无奈的选择了西北的学校，我定了个较低的目标；但却非常纠结，因为这和我当初励志离开西北的想法不同，但现在却为了上岸妥协了初衷，我无颜面对当初的自己。在无数个日夜中我不断纠结，看着时光流逝感到无奈，深感对自我掌控力的不足。&lt;br&gt;与过去复习过程类似，有种搬苞谷的感觉，怀疑不断打击着自信，直到把理想摧垮。后来逐渐发现考研需要的不仅是理想，考研需要的更是信念。唯有坚定的信念才能抵御困难的打击，只有不屈的意志才能克服险隘的阻挡。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;下定决心，排除万难。
&lt;/code&gt;&lt;/pre&gt;</summary>
    
    
    
    <category term="日志" scheme="https://scholargeek.github.io/categories/Log/"/>
    
    
    <category term="PostgraduateEntranceExamination" scheme="https://scholargeek.github.io/tags/PostgraduateEntranceExamination/"/>
    
  </entry>
  
  <entry>
    <title>考研日志一</title>
    <link href="https://scholargeek.github.io/2021/12/28/%E8%80%83%E7%A0%94%E5%BF%97%E4%B8%80/"/>
    <id>https://scholargeek.github.io/2021/12/28/%E8%80%83%E7%A0%94%E5%BF%97%E4%B8%80/</id>
    <published>2021-12-28T04:06:06.000Z</published>
    <updated>2021-12-28T04:58:28.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>记得我大一时励志一定要考研，但在学校蹉跎岁月，很长时间都无法准备。考研这个想法长时间停留在我的脑海中，我不知道自己是否有实力和毅力面对这场人生大考，但我仍想尝试。毕竟考研如同小马过河，在没有尝试过之前没人知道水深水浅。其实在大学的最后一年中，我也观察了许多考研人的努力；有浅尝辄止的，有反复无常的，也有全力以赴的；我最多算浅尝辄止的，面对困难和机遇我愧对大一时的自己。记得我跨入大学校门的那一天，我曾经发下的誓言，我背负的耻辱，我无颜面对曾经的自己。在即将毕业的这段时间，我十分痛苦纠结，没什么准备的参加了20考研专业课考试，题会的不多，我已然抱着看题目的心态面对这场考试。之后无奈走入工作岗位，但我仍然心系考研，看着一年又一年的考研人入场，不断壮大的考研人数，我知道以后的考研只会更难。<br>    2020年考研人数为341万；2021年考研人数为377万；2022年考研人数为457万；······</p><span id="more"></span><p>我在国家银行的工作随着不断学习也越发得心应手，但对未来的焦虑也与日俱增。我迫切的想提升学历，于是重新开始制定考研的计划，在单位的宿舍中我不断的搜索资料，希望能找到合适的院校，最后将目标定在了西南的一所知名院校。后来搬回到家中我买了考研所需的资料，在工作之余尽量复习，虽然我制定了计划，但复习进度不如人意。我时而积极时而颓丧，工作和考研不断调和，我不知道该专心工作还是该专心考研，无论我怎么做都像在逃避什么。如果我专心工作那么考研该怎么办？若我专心考研那么我工作该怎么办？我反复纠结，拿不定主意，最后将焦虑诉说给父母，这就把选择权交了出去，最后听了我妈的建议为考研放弃工作，全心全意备战考研。其实我已经开始习惯了工作的状态，当我交出辞职报告时还是有些纠结，但木已成舟时我忽然轻松了不少，只是略微有些留恋。故事到了这应该即刻出现夜以继日、废寝忘食的学习画面，但实际从工作状态切换到完全学习的状态的确不易。<br><img src="https://s3.bmp.ovh/imgs/2023/01/25/3b976ba2b4e38616.png" alt="2022考研计划"><br>在家复习的那段时光，让我认清自己，承认自己是迟钝的、无知的、无畏的。我曾励志考研，现在机会就摆在面前，我却犹豫。复习初始的状态当然很好，但随着时间的流逝我就陷入了焦虑和自责中。我开始在复习时间走神，回忆，被动的回忆，不由自主的回忆。可能我才认识到过去的半年是我人生最重要的时刻，从开始到未来。我可能才意识到，我的内心世界是如此活跃，但身体上却感到很疲倦，不想动弹。回想从前的工作，如同被驯化的工具，我已然内心抗拒。离职后我的情绪在变化，觉得自己在逼自己，但我已然也必然走出了关键性的一步，无论是否坚定，但这一切是真实的。<br>现实的我已然坠落，我要向上攀爬，无论面对什么，都要有自我。或许我怀念轻松的时光，但为了梦想而且还要挣脱现实，又怎能轻松。况且从来的轻松只是暂时的，又不可预知。为了心甘情愿的走过这漫漫人生路，为了更加美好的一切。不必自责，不必怀念，不必幻想，因为人只活在当下。唯有把握现在，才能塑造将来。我想既已如此，只有现在的我可以再次证明，证明我仍是可塑的，我要做我心中的那个人，不负此生。虽然生命中总有许多缺憾，但我仍相信事在人为，做我要做的。心中有力量，就无惧挑战；倘若成功，必是美好。<br>    你是谁？是你本身的想法决定的，而非做了什么决定了你是谁。<br>在复习期间母亲身体抱恙，虽然我没有表现出什么，但我心里却十分担心，希望她一切都好。说回我自己，考前一个月我已经无法安然入睡，甚至有了抑郁的情绪，纷乱的思绪使我痛苦，我知道自己复习的成果无法达到预期。在考试当天压抑的情绪使我出现了胸痛的情况，我忍着疼痛完成了考试，虽然我预料到考试成绩不会理想，可能无法接受这种结果，最终抑郁。在我人生最难熬的时候，父母给了我最大的支持，使我的精神状态渐渐恢复到正常。反复思量后我决定再战，我不信我考不上，或许就是这种不服输的勇气让我开始了2022年的复习之旅。但只有勇气是不够的，我还需要毅力，希望我能给自己一个满意的交代。</p><hr><p><strong>版权声明</strong></p><p><img src="/images/cc.png"></p><p><a href="https://scholargeek.github.io/">Scholar’s Blog</a> by <a href="https://scholargeek.github.io/About/">scholargeek</a> is licensed under a <a href="http://creativecommons.org/licenses/by-nc-nd/4.0/">Creative Commons BY-NC-ND 4.0 International License</a>.<br>由<a href="https://scholargeek.github.io/About/">董仕麟</a>创作并维护的<a href="https://scholargeek.github.io/">scholargeek</a>博客采用<a href="http://creativecommons.org/licenses/by-nc-nd/4.0/">创作共用保留署名-非商业-禁止演绎4.0国际许可证</a>。</p><p>本文首发于<a href="https://scholargeek.github.io/">Scholar’s Blog</a>博客，版权所有，侵权必究。</p><p>本文永久链接：<a href="https://scholargeek.github.io/2021/12/28/%E8%80%83%E7%A0%94%E5%BF%97%E4%B8%80/">https://scholargeek.github.io/2021/12/28/%E8%80%83%E7%A0%94%E5%BF%97%E4%B8%80/</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;记得我大一时励志一定要考研，但在学校蹉跎岁月，很长时间都无法准备。考研这个想法长时间停留在我的脑海中，我不知道自己是否有实力和毅力面对这场人生大考，但我仍想尝试。毕竟考研如同小马过河，在没有尝试过之前没人知道水深水浅。其实在大学的最后一年中，我也观察了许多考研人的努力；有浅尝辄止的，有反复无常的，也有全力以赴的；我最多算浅尝辄止的，面对困难和机遇我愧对大一时的自己。记得我跨入大学校门的那一天，我曾经发下的誓言，我背负的耻辱，我无颜面对曾经的自己。在即将毕业的这段时间，我十分痛苦纠结，没什么准备的参加了20考研专业课考试，题会的不多，我已然抱着看题目的心态面对这场考试。之后无奈走入工作岗位，但我仍然心系考研，看着一年又一年的考研人入场，不断壮大的考研人数，我知道以后的考研只会更难。&lt;br&gt;    2020年考研人数为341万；2021年考研人数为377万；2022年考研人数为457万；······&lt;/p&gt;</summary>
    
    
    
    <category term="日志" scheme="https://scholargeek.github.io/categories/Log/"/>
    
    
    <category term="PostgraduateEntranceExamination" scheme="https://scholargeek.github.io/tags/PostgraduateEntranceExamination/"/>
    
  </entry>
  
  <entry>
    <title>CSS进阶内容学习</title>
    <link href="https://scholargeek.github.io/2019/09/06/CSS1/"/>
    <id>https://scholargeek.github.io/2019/09/06/CSS1/</id>
    <published>2019-09-06T00:28:08.000Z</published>
    <updated>2019-09-06T00:08:08.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="CSS进阶1"><a href="#CSS进阶1" class="headerlink" title="CSS进阶1"></a>CSS进阶1</h1><p>　　本文将表述关于盒子模型和其样式定位的内容。了解CSS盒子模型的概念、计算、以及如何设置元素的宽度和高度。</p><span id="more"></span><h2 id="盒子模型"><a href="#盒子模型" class="headerlink" title="盒子模型"></a>盒子模型</h2><p>　　盒子模型(box model)又称框模型，指所有HTML元素都可以看作盒子。CSS盒模型本质上是一个盒子，封装周围的HTML元素，它包括：边距，边框，填充，和实际内容。盒模型允许我们在其它元素和周围元素边框之间的空间放置元素。<br><img src="https://s3.bmp.ovh/imgs/2024/03/18/eac973a675cf2eaf.jpg" alt="box-model"></p><p>●margin 框外位置<br>margin-top 上边界<br>margin-bottom 下边界<br>margin-left 左边界<br>margin-right 右边界</p><p>●padding 框内位置<br>padding-top 上填充<br>padding-bottom 下填充<br>padding-left 左填充<br>padding-right 右填充</p><p>●border 边框属性<br>border-top 上边框<br>border-bottom 下边框<br>border-left 左边框<br>border-right 右边框<br>border-width 边框粗细<br>border-color 边框颜色<br>border-style 边框样式</p><h2 id="元素定位"><a href="#元素定位" class="headerlink" title="元素定位"></a>元素定位</h2><p>　　定位即元素框相对于游览器窗口或父元素的位置。定位机制包括 默认、绝对定位和相对定位。其中绝对定位的参考系原点为网页左上顶点，而相对定位的参考系原点为父级元素下默认子元素原始位置左上顶点。</p><p>参考系坐标方向如下：<br><img src="https://s3.bmp.ovh/imgs/2024/03/18/aeb8e19606914926.png" alt="CSS参考系"></p><p>●position 定位属性<br>absolute 绝对定位<br>relative 相对定位</p><p><code>z-index</code>属性设置定位元素及其后代元素或 flex 项目的 Z 轴顺序。z-index 较大的重叠元素会覆盖较小的元素。z-index值可以为负数，默认值为0。<br><img src="https://s3.bmp.ovh/imgs/2024/03/18/857a08531f679e64.png" alt="z-index属性"></p><p>实列如下：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">img</span> &#123; </span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0px</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0px</span>;</span><br><span class="line">  <span class="attribute">z-index</span>: -<span class="number">1</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="DIV类标签CSS修饰"><a href="#DIV类标签CSS修饰" class="headerlink" title="DIV类标签CSS修饰"></a>DIV类标签CSS修饰</h2><p>使占行标签收缩并漂移位置，使用CSS修饰属性<code>float</code>。<br>将li标签向左漂移的实列如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>标签浮动<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">      li &#123;</span></span><br><span class="line"><span class="language-xml">        width: 100px;  <span class="comment">&lt;!-- 标签宽度 --&gt;</span></span></span><br><span class="line"><span class="language-xml">        background-color: aqua;  <span class="comment">&lt;!-- 背景色 --&gt;</span></span></span><br><span class="line"><span class="language-xml">        margin-left: 50px;  <span class="comment">&lt;!-- 左边界50像素 --&gt;</span></span></span><br><span class="line"><span class="language-xml">        float: left;  <span class="comment">&lt;!-- 向左平移成一行 --&gt;</span></span></span><br><span class="line"><span class="language-xml">        list-style: none;  <span class="comment">&lt;!-- 无点标识 --&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#125;</span></span><br><span class="line"><span class="language-xml">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span>我<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span>你<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span>他<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><p><strong>版权声明</strong></p><p><img src="/images/cc.png"></p><p><a href="https://scholargeek.github.io/">Scholar’s Blog</a> by <a href="https://scholargeek.github.io/About/">scholargeek</a> is licensed under a <a href="http://creativecommons.org/licenses/by-nc-nd/4.0/">Creative Commons BY-NC-ND 4.0 International License</a>.<br>由<a href="https://scholargeek.github.io/About/">董仕麟</a>创作并维护的<a href="https://scholargeek.github.io/">scholargeek</a>博客采用<a href="http://creativecommons.org/licenses/by-nc-nd/4.0/">创作共用保留署名-非商业-禁止演绎4.0国际许可证</a>。</p><p>本文首发于<a href="https://scholargeek.github.io/">Scholar’s Blog</a>博客，版权所有，侵权必究。</p><p>本文永久链接：<a href="https://scholargeek.github.io/2019/09/06/CSS1/">https://scholargeek.github.io/2019/09/06/CSS1/</a></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;CSS进阶1&quot;&gt;&lt;a href=&quot;#CSS进阶1&quot; class=&quot;headerlink&quot; title=&quot;CSS进阶1&quot;&gt;&lt;/a&gt;CSS进阶1&lt;/h1&gt;&lt;p&gt;　　本文将表述关于盒子模型和其样式定位的内容。了解CSS盒子模型的概念、计算、以及如何设置元素的宽度和高度。&lt;/p&gt;</summary>
    
    
    
    <category term="编程" scheme="https://scholargeek.github.io/categories/Programming/"/>
    
    
    <category term="CSS" scheme="https://scholargeek.github.io/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>CSS简介与基本语法</title>
    <link href="https://scholargeek.github.io/2019/09/01/CSS/"/>
    <id>https://scholargeek.github.io/2019/09/01/CSS/</id>
    <published>2019-09-01T00:28:08.000Z</published>
    <updated>2019-09-01T00:08:08.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="CSS简介"><a href="#CSS简介" class="headerlink" title="CSS简介"></a>CSS简介</h1><p>　　层叠样式表(Cascading Style Sheets)，缩写：CSS；又称串样式列表、级联样式表、串接样式表、阶层式样式表。是一种用来为结构化文档（如HTML文档或XML应用）添加样式（字体、间距和颜色等）的计算机语言，由W3C定义和维护。CSS3现在已被大部分现代浏览器支持，而下一版的CSS4仍在开发中。</p><span id="more"></span><h2 id="CSS概述"><a href="#CSS概述" class="headerlink" title="CSS概述"></a>CSS概述</h2><p>　　CSS不仅可以静态地修饰网页，还可以配合各种脚本语言动态地对网页各元素进行格式化。CSS 能够对网页中元素位置的排版进行像素级精确控制，支持几乎所有的字体字号样式，拥有对网页对象和模型样式编辑的能力。CSS不能单独使用，必须与HTML或XML一起协同工作，为HTML或XML起装饰作用。本文主要介绍用于装饰HTML网页的CSS技术。其中HTML负责确定网页中有哪些内容，CSS确定以何种外观展现这些元素。CSS可以用于设定页面布局、设定页面元素样式、设定适用于所有网页的全局样式。CSS可以零散地直接添加在要应用样式的网页元素上，也可以集中化内置于网页、链接式引入网页以及导入式引入网页。<br>　　CSS最重要的目标是将文件的内容与它的显示分隔开来。在CSS出现前，几乎所有的HTML文件内都包含文件显示的信息，比如字体的颜色、背景应该是怎样的、如何排列、边缘、连线等等都必须一一在HTML文件内列出，有时重复列出。CSS使作者可以将这些信息中的大部分隔离出来，简化HTML文件，这些信息被放在一个辅助的，用CSS语言写的文件中。HTML文件中只包含结构和内容的信息，CSS文件中只包含样式的信息。<br>　　简而言之，CSS是一种用于装饰HTML的标记集合，是对HTML的标记扩展，可以进一步美化HTML页面以统一网页风格。</p><h2 id="CSS基本内容"><a href="#CSS基本内容" class="headerlink" title="CSS基本内容"></a>CSS基本内容</h2><h3 id="CSS样式表语法"><a href="#CSS样式表语法" class="headerlink" title="CSS样式表语法"></a>CSS样式表语法</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">RuleSelector &#123;property: value;property:value;...&#125;</span><br><span class="line"><span class="comment">&lt;!-- 规则选择器 &#123;属性:值;属性:值...&#125; --&gt;</span></span><br></pre></td></tr></table></figure><h3 id="CSS样式信息存储位置"><a href="#CSS样式信息存储位置" class="headerlink" title="CSS样式信息存储位置"></a>CSS样式信息存储位置</h3><p>①存储在HTML文件内部，即存放在<head><style></style></head>区内，如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>静夜思<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">p</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: large;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-weight</span>: bold;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: pink;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-decoration-line</span>: underline;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.one</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: blue;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-weight</span>: <span class="number">800</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.two</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: green;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-weight</span>: <span class="number">800</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>静夜思<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;one&quot;</span>&gt;</span>床前明月光，<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;two&quot;</span>&gt;</span>疑是地上霜。<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;one&quot;</span>&gt;</span>举头望明月，<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;two&quot;</span>&gt;</span>低头思故乡。<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>②存储在独立文件中，即存放在例如扩展名为<code>my.css</code>的文件中，可在需要美化的HTML文件中使用<code>&lt;link rel=&quot;stylesheet&quot; href=&quot;./css/my.css&quot; /&gt;</code>引用。如下：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- my<span class="selector-class">.css</span> --&gt;</span><br><span class="line"><span class="selector-id">#two</span> <span class="selector-class">.foolish</span>&#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">28px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#two</span> &gt; <span class="selector-tag">p</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#one</span> &gt; <span class="selector-tag">span</span>,<span class="selector-id">#two</span> <span class="selector-class">.foolish</span>&#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">6px</span> solid blue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>CSS练习<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;./css/my.css&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;one&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;China&quot;</span> <span class="attr">class</span>=<span class="string">&quot;foolish&quot;</span>&gt;</span>中国<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span>&gt;</span>新加坡<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;two&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span>&gt;</span>中国<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span>&gt;</span>美国<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>韩国<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span>&gt;</span>日本<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;foolish&quot;</span>&gt;</span>俄罗斯<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="规则选择器"><a href="#规则选择器" class="headerlink" title="规则选择器"></a>规则选择器</h3><p>规则选择器用于指定需要美化的HTML元素位置,包括:标签选择器、ID选择器、类别选择器、万用选择器、通配符选择器。</p><p>●标签选择器：使当前网页中所有相同的标签共享一个样式</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">标签名&#123;</span><br><span class="line">属性名:值;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>●ID选择器：使当前网页指定ID的标签使用一个样式</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#id&#123;</span><br><span class="line">属性名:值;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>●类别选择器：使当前网页指定的class标签为同一类以共享一个样式</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.class&#123;</span><br><span class="line">属性名:值;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>●后代选择器：从父标签与后代标签的关系以定位到后代确定样式</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">父标签 后代标签(要定位的标签)&#123;</span><br><span class="line">属性名:值;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>●父子选择器：从父标签定位到子标签确定样式</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">父标签 &gt; 子标签&#123;</span><br><span class="line">属性名:值;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>●并列选择器：同时选择多个无关系的标签确定样式</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">标签1,标签2,标签3&#123;</span><br><span class="line">属性名:值;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>●通用选择器：使当前网页所有标签添加指定样式</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">*&#123;</span><br><span class="line">属性名:值;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p><strong>版权声明</strong></p><p><img src="/images/cc.png"></p><p><a href="https://scholargeek.github.io/">Scholar’s Blog</a> by <a href="https://scholargeek.github.io/About/">scholargeek</a> is licensed under a <a href="http://creativecommons.org/licenses/by-nc-nd/4.0/">Creative Commons BY-NC-ND 4.0 International License</a>.<br>由<a href="https://scholargeek.github.io/About/">董仕麟</a>创作并维护的<a href="https://scholargeek.github.io/">scholargeek</a>博客采用<a href="http://creativecommons.org/licenses/by-nc-nd/4.0/">创作共用保留署名-非商业-禁止演绎4.0国际许可证</a>。</p><p>本文首发于<a href="https://scholargeek.github.io/">Scholar’s Blog</a>博客，版权所有，侵权必究。</p><p>本文永久链接：<a href="https://scholargeek.github.io/2019/09/01/CSS/">https://scholargeek.github.io/2019/09/01/CSS/</a></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;CSS简介&quot;&gt;&lt;a href=&quot;#CSS简介&quot; class=&quot;headerlink&quot; title=&quot;CSS简介&quot;&gt;&lt;/a&gt;CSS简介&lt;/h1&gt;&lt;p&gt;　　层叠样式表(Cascading Style Sheets)，缩写：CSS；又称串样式列表、级联样式表、串接样式表、阶层式样式表。是一种用来为结构化文档（如HTML文档或XML应用）添加样式（字体、间距和颜色等）的计算机语言，由W3C定义和维护。CSS3现在已被大部分现代浏览器支持，而下一版的CSS4仍在开发中。&lt;/p&gt;</summary>
    
    
    
    <category term="编程" scheme="https://scholargeek.github.io/categories/Programming/"/>
    
    
    <category term="CSS" scheme="https://scholargeek.github.io/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>HTML简介与基本语法</title>
    <link href="https://scholargeek.github.io/2019/08/28/HTML/"/>
    <id>https://scholargeek.github.io/2019/08/28/HTML/</id>
    <published>2019-08-28T00:28:08.000Z</published>
    <updated>2019-08-28T00:28:08.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="HTML简介"><a href="#HTML简介" class="headerlink" title="HTML简介"></a>HTML简介</h1><p>　　超文本标记语言（HyperText Markup Language）简称：HTML。是一种用于创建网页的标准标记语言。HTML是一种基础技术，常与CSS、JavaScript一起被众多网站用于设计网页、网页应用程序以及移动应用程序的用户界面。网页浏览器可以读取HTML文件，并将其渲染成可视化网页。HTML描述了一个网站的结构语义随着线索的呈现，使之成为一种标记语言而非编程语言。<br>　　HTML元素是构建网站的基石。HTML允许嵌入图像与对象，并且可以用于创建交互式表单，它被用来结构化信息——例如标题、段落和列表等等，也可用来在一定程度上描述文档的外观和语义。HTML的语言形式为尖括号包围的HTML元素（如<html>），浏览器使用HTML标签和脚本来诠释网页内容，但不会将它们显示在页面上。<br>　　HTML可以嵌入如JavaScript的脚本语言，它们会影响HTML网页的行为。网页浏览器也可以引用层叠样式表（CSS）来定义文本和其它元素的外观与布局。维护HTML和CSS标准的组织万维网联盟（W3C）鼓励人们使用CSS替代一些用于表现的HTML元素。</html></p><span id="more"></span><h2 id="基本格式"><a href="#基本格式" class="headerlink" title="基本格式"></a>基本格式</h2><h3 id="基本结构"><a href="#基本结构" class="headerlink" title="基本结构"></a>基本结构</h3><p>起始标记、网页标题、文件主体。<br>经典HTML例子：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>This is a title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Hello world!<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h3><p><strong>标题</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>大标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>二级标题<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>三级标题<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>四级标题<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h5</span>&gt;</span>五级标题<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h6</span>&gt;</span>最小标题<span class="tag">&lt;/<span class="name">h6</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>注释</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 注释 --&gt;</span></span><br></pre></td></tr></table></figure><p><strong>水平线</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>换行</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br></pre></td></tr></table></figure><p><strong>一个空格</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span></span><br></pre></td></tr></table></figure><p><strong>段落</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>图片标签</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;_url_&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;_some_text_&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>超链接</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span>  <span class="attr">href</span>=<span class="string">&quot;url&quot;</span>&gt;</span>链接文本<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>无序列表</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>你<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>我<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>他<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>有序列表</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span> <span class="attr">type</span>=<span class="string">&quot;A&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>你<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>我<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>他<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>表格标签</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span>&gt;</span>列标题1<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span>&gt;</span>列标题2<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span>&gt;</span>列标题3<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>行1，列1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>行1，列2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>行1，列3<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>行2，列1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>行2，列2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>行2，列3<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>表单方法</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">FORM</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">action</span>=<span class="string">&quot;result.html&quot;</span>&gt;</span></span><br><span class="line">...</span><br><span class="line"><span class="tag">&lt;/<span class="name">FORM</span>&gt;</span></span><br></pre></td></tr></table></figure><p>其中method即为http请求方法，可以选择使用 get 或 post<br>● get是不安全的，在请求传输过程中数据被放在请求的URL中；而post的所有操作数据对用户完全不可见。<br>● get传送的数据量小，主要因为URL长度限制；而post传送的数据量较大，一般不被限制。</p><p>注意：表单组件必须被FORM标签包含，否则登陆清空按钮的操作无效。</p><p><strong>表单组件</strong><br>【文本框与按钮】</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>用户登陆<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 单行文本框，可添加placeholder=&quot;xxx&quot; 提示文本 --&gt;</span></span><br><span class="line">账号：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> /&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 密码框 --&gt;</span></span><br><span class="line">密码: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> /&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 登陆按钮 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;登陆&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 清空按钮 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">&quot;reset&quot;</span> <span class="attr">value</span>=<span class="string">&quot;清空&quot;</span>&gt;</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 数字文本框，被限制仅能输入数字 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;number&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>【单项选择按钮】</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">性别：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span> <span class="attr">value</span>=<span class="string">&quot;男&quot;</span> /&gt;</span> 男</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span> <span class="attr">value</span>=<span class="string">&quot;女&quot;</span> <span class="attr">checked</span> /&gt;</span> 女</span><br><span class="line"><span class="comment">&lt;!-- 使男女单选互斥，仅选择一个，必须将name名命名相同 --&gt;</span></span><br></pre></td></tr></table></figure><p>【多项选择按钮】</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">爱好：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;love&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span> <span class="attr">value</span>=<span class="string">&quot;cf&quot;</span> /&gt;</span>吃饭</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;love&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span> <span class="attr">value</span>=<span class="string">&quot;sj&quot;</span> /&gt;</span>睡觉</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;love&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span> <span class="attr">value</span>=<span class="string">&quot;xx&quot;</span> /&gt;</span>学习</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;love&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span> <span class="attr">value</span>=<span class="string">&quot;ddd&quot;</span> /&gt;</span>打豆豆</span><br><span class="line"><span class="comment">&lt;!-- 将一组数据打包须使name名相同；默认选中需添加checked --&gt;</span></span><br></pre></td></tr></table></figure><p>【上传框】</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">头像：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>【下拉框】</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">籍贯：</span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;bj&quot;</span>&gt;</span>北京<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;sh&quot;</span> <span class="attr">selected</span>&gt;</span>上海<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;gz&quot;</span>&gt;</span>广州<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>【多行文本框】</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">备注：<span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span> <span class="attr">cols</span>=<span class="string">&quot;80&quot;</span> <span class="attr">rows</span>=<span class="string">&quot;10&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>【浮动窗口】</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span> <span class="attr">width</span>=<span class="string">&quot;100&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">width</span>=<span class="string">&quot;20%&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;./sy.html&quot;</span> <span class="attr">target</span>=<span class="string">&quot;wc&quot;</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span>  <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;./xc.html&quot;</span> <span class="attr">target</span>=<span class="string">&quot;wc&quot;</span>&gt;</span>我的相册<span class="tag">&lt;/<span class="name">a</span>&gt;</span>  <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;./rj.html&quot;</span> <span class="attr">target</span>=<span class="string">&quot;wc&quot;</span>&gt;</span>我的日记<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">width</span>=<span class="string">&quot;80%&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;./sy.html&quot;</span> <span class="attr">frameborder</span>=<span class="string">&quot;0&quot;</span> <span class="attr">name</span>=<span class="string">&quot;wc&quot;</span> <span class="attr">width</span>=<span class="string">&quot;100%&quot;</span> <span class="attr">height</span>=<span class="string">&quot;300&quot;</span>&gt;</span> <span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><p><strong>版权声明</strong></p><p><img src="/images/cc.png"></p><p><a href="https://scholargeek.github.io/">Scholar’s Blog</a> by <a href="https://scholargeek.github.io/About/">scholargeek</a> is licensed under a <a href="http://creativecommons.org/licenses/by-nc-nd/4.0/">Creative Commons BY-NC-ND 4.0 International License</a>.<br>由<a href="https://scholargeek.github.io/About/">董仕麟</a>创作并维护的<a href="https://scholargeek.github.io/">scholargeek</a>博客采用<a href="http://creativecommons.org/licenses/by-nc-nd/4.0/">创作共用保留署名-非商业-禁止演绎4.0国际许可证</a>。</p><p>本文首发于<a href="https://scholargeek.github.io/">Scholar’s Blog</a>博客，版权所有，侵权必究。</p><p>本文永久链接：<a href="https://scholargeek.github.io/2019/08/28/HTML/">https://scholargeek.github.io/2019/08/28/HTML/</a></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;HTML简介&quot;&gt;&lt;a href=&quot;#HTML简介&quot; class=&quot;headerlink&quot; title=&quot;HTML简介&quot;&gt;&lt;/a&gt;HTML简介&lt;/h1&gt;&lt;p&gt;　　超文本标记语言（HyperText Markup Language）简称：HTML。是一种用于创建网页的标准标记语言。HTML是一种基础技术，常与CSS、JavaScript一起被众多网站用于设计网页、网页应用程序以及移动应用程序的用户界面。网页浏览器可以读取HTML文件，并将其渲染成可视化网页。HTML描述了一个网站的结构语义随着线索的呈现，使之成为一种标记语言而非编程语言。&lt;br&gt;　　HTML元素是构建网站的基石。HTML允许嵌入图像与对象，并且可以用于创建交互式表单，它被用来结构化信息——例如标题、段落和列表等等，也可用来在一定程度上描述文档的外观和语义。HTML的语言形式为尖括号包围的HTML元素（如&lt;html&gt;），浏览器使用HTML标签和脚本来诠释网页内容，但不会将它们显示在页面上。&lt;br&gt;　　HTML可以嵌入如JavaScript的脚本语言，它们会影响HTML网页的行为。网页浏览器也可以引用层叠样式表（CSS）来定义文本和其它元素的外观与布局。维护HTML和CSS标准的组织万维网联盟（W3C）鼓励人们使用CSS替代一些用于表现的HTML元素。&lt;/html&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="编程" scheme="https://scholargeek.github.io/categories/Programming/"/>
    
    
    <category term="HTML" scheme="https://scholargeek.github.io/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客部署过程的问题1</title>
    <link href="https://scholargeek.github.io/2019/08/01/Hexo%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2%E8%BF%87%E7%A8%8B%E7%9A%84%E9%97%AE%E9%A2%981/"/>
    <id>https://scholargeek.github.io/2019/08/01/Hexo%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2%E8%BF%87%E7%A8%8B%E7%9A%84%E9%97%AE%E9%A2%981/</id>
    <published>2019-08-01T04:06:06.000Z</published>
    <updated>2019-08-01T04:06:06.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Hexo博客推送到GitHub上产生的问题"><a href="#Hexo博客推送到GitHub上产生的问题" class="headerlink" title="Hexo博客推送到GitHub上产生的问题"></a>Hexo博客推送到GitHub上产生的问题</h1><p>在博客搭建与部署的过程中发生了一些错误，现在对问题进行描述并提供解决方法。</p><span id="more"></span><h2 id="ERROR-Deployer-not-found-git"><a href="#ERROR-Deployer-not-found-git" class="headerlink" title="ERROR Deployer not found: git"></a>ERROR Deployer not found: git</h2><p>问题：使用git命令时显示</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ERROR Deployer not found: git</span><br></pre></td></tr></table></figure><p>解决方法：在Bash或Powershell中输入如下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git –save</span><br></pre></td></tr></table></figure><h2 id="配置SSH命令"><a href="#配置SSH命令" class="headerlink" title="配置SSH命令"></a>配置SSH命令</h2><p>问题：仅在配置_config.yml中配置了repo: https,但未在Github设置中配置SSH,会在推送博文中产生安全隐患，且每次都需输入用户名及邮箱，十分麻烦。<br>解决方法：配置SSH，在GitBash中输入:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd ~/.ssh //检查是否有.ssh的文件夹</span><br><span class="line"></span><br><span class="line">ssh-keygen -t rsa -C “xxx@mail.com” //配置ssh，引号中内容替换为注册时的邮箱地址</span><br></pre></td></tr></table></figure><p>三次回车后，即在C\Users\admin.ssh路径中生成了两个文件：id_rsa和id_rsa.pub。<br>再输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">eval &quot;$(ssh-agent -s)&quot; //添加密钥到ssh-agent</span><br><span class="line"></span><br><span class="line"> ssh-add ~/.ssh/id_rsa        //添加生成的SSH key到ssh-agent</span><br></pre></td></tr></table></figure><p>登录Github，点击头像下的settings，添加ssh。<br>将C\Users\admin.ssh路径下的id_rsa.pub文件内容复制到ssh key中去，保存即可。</p><p>最后验证：在GitBash中输入ssh -T <a href="mailto:git@github.com">git@github.com</a> 回车后询问是否进行连接，输入yes回车后，若回显为：You’ve successfully authenticated 则配置成功。</p><h2 id="显示登陆失败，但输入密码正确"><a href="#显示登陆失败，但输入密码正确" class="headerlink" title="显示登陆失败，但输入密码正确"></a>显示登陆失败，但输入密码正确</h2><p>问题：输入密码无效<br>原因：由于GitHub在21年8月13 后不再支持用户名密码的方式验证，需要创建个人访问令牌(personal access token)<br>解决方法：<br>登陆github网站，在个人选项中依次选择-&gt;settings-&gt;Developer settings(settings 的最下方）-&gt;Personal access tokens-&gt;选择“Generate a personal access token”<br>如下图：<br><img src="https://s3.bmp.ovh/imgs/2023/01/20/322ec5d1a6a653f9.png" alt="GitHub_Token1"><br><img src="https://s3.bmp.ovh/imgs/2023/01/20/73c18451b6309e81.png" alt="GitHub_Token2"><br><img src="https://s3.bmp.ovh/imgs/2023/01/20/7f1281483ac32874.png" alt="GitHub_Token3"><br><img src="https://s3.bmp.ovh/imgs/2023/01/20/c41936664e5d9e15.png" alt="GitHub_Token4"><br>生成Token后复制保存到安全位置，此后推送博文使用Token代替密码。</p><hr><p><strong>版权声明</strong></p><p><img src="/images/cc.png"></p><p><a href="https://scholargeek.github.io/">Scholar’s Blog</a> by <a href="https://scholargeek.github.io/About/">scholargeek</a> is licensed under a <a href="http://creativecommons.org/licenses/by-nc-nd/4.0/">Creative Commons BY-NC-ND 4.0 International License</a>.<br>由<a href="https://scholargeek.github.io/About/">董仕麟</a>创作并维护的<a href="https://scholargeek.github.io/">scholargeek</a>博客采用<a href="http://creativecommons.org/licenses/by-nc-nd/4.0/">创作共用保留署名-非商业-禁止演绎4.0国际许可证</a>。</p><p>本文首发于<a href="https://scholargeek.github.io/">Scholar’s Blog</a>博客，版权所有，侵权必究。</p><p>本文永久链接：<a href="https://scholargeek.github.io/2019/08/01/Hexo%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2%E8%BF%87%E7%A8%8B%E7%9A%84%E9%97%AE%E9%A2%981/">https://scholargeek.github.io/2019/08/01/Hexo%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2%E8%BF%87%E7%A8%8B%E7%9A%84%E9%97%AE%E9%A2%981/</a></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;Hexo博客推送到GitHub上产生的问题&quot;&gt;&lt;a href=&quot;#Hexo博客推送到GitHub上产生的问题&quot; class=&quot;headerlink&quot; title=&quot;Hexo博客推送到GitHub上产生的问题&quot;&gt;&lt;/a&gt;Hexo博客推送到GitHub上产生的问题&lt;/h1&gt;&lt;p&gt;在博客搭建与部署的过程中发生了一些错误，现在对问题进行描述并提供解决方法。&lt;/p&gt;</summary>
    
    
    
    <category term="教程" scheme="https://scholargeek.github.io/categories/Tutorial/"/>
    
    
    <category term="Hexo" scheme="https://scholargeek.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客默认主题的修改与美化16</title>
    <link href="https://scholargeek.github.io/2019/07/31/Hexo%E5%8D%9A%E5%AE%A2%E9%BB%98%E8%AE%A4%E4%B8%BB%E9%A2%98%E7%9A%84%E4%BF%AE%E6%94%B9%E4%B8%8E%E7%BE%8E%E5%8C%9616/"/>
    <id>https://scholargeek.github.io/2019/07/31/Hexo%E5%8D%9A%E5%AE%A2%E9%BB%98%E8%AE%A4%E4%B8%BB%E9%A2%98%E7%9A%84%E4%BF%AE%E6%94%B9%E4%B8%8E%E7%BE%8E%E5%8C%9616/</id>
    <published>2019-07-31T04:06:06.000Z</published>
    <updated>2019-07-31T00:28:08.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="给博客中导航栏添加GitHub快捷链接"><a href="#给博客中导航栏添加GitHub快捷链接" class="headerlink" title="给博客中导航栏添加GitHub快捷链接"></a>给博客中导航栏添加GitHub快捷链接</h1><p>技术博客的内容一般与GitHub有密切联系，给博客导航栏添加快捷按钮十分方便开发者。<br>本文将详述如何给导航栏添加快捷链接。</p><span id="more"></span><ol><li><p>首先打开<a href="https://tholman.com/github-corners/">https://tholman.com/github-corners/</a> 选择合适的样式并复制源码</p></li><li><p>把复制的源码粘贴到\blog\themes\landscape\layout\ layout.ejs 中的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;outer&quot;&gt;</span><br></pre></td></tr></table></figure><p>下方，保存文件即可。</p></li></ol><hr><p><strong>版权声明</strong></p><p><img src="/images/cc.png"></p><p><a href="https://scholargeek.github.io/">Scholar’s Blog</a> by <a href="https://scholargeek.github.io/About/">scholargeek</a> is licensed under a <a href="http://creativecommons.org/licenses/by-nc-nd/4.0/">Creative Commons BY-NC-ND 4.0 International License</a>.<br>由<a href="https://scholargeek.github.io/About/">董仕麟</a>创作并维护的<a href="https://scholargeek.github.io/">scholargeek</a>博客采用<a href="http://creativecommons.org/licenses/by-nc-nd/4.0/">创作共用保留署名-非商业-禁止演绎4.0国际许可证</a>。</p><p>本文首发于<a href="https://scholargeek.github.io/">Scholar’s Blog</a>博客，版权所有，侵权必究。</p><p>本文永久链接：<a href="https://scholargeek.github.io/2019/07/31/Hexo%E5%8D%9A%E5%AE%A2%E9%BB%98%E8%AE%A4%E4%B8%BB%E9%A2%98%E7%9A%84%E4%BF%AE%E6%94%B9%E4%B8%8E%E7%BE%8E%E5%8C%9616/">https://scholargeek.github.io/2019/07/31/Hexo%E5%8D%9A%E5%AE%A2%E9%BB%98%E8%AE%A4%E4%B8%BB%E9%A2%98%E7%9A%84%E4%BF%AE%E6%94%B9%E4%B8%8E%E7%BE%8E%E5%8C%9616/</a></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;给博客中导航栏添加GitHub快捷链接&quot;&gt;&lt;a href=&quot;#给博客中导航栏添加GitHub快捷链接&quot; class=&quot;headerlink&quot; title=&quot;给博客中导航栏添加GitHub快捷链接&quot;&gt;&lt;/a&gt;给博客中导航栏添加GitHub快捷链接&lt;/h1&gt;&lt;p&gt;技术博客的内容一般与GitHub有密切联系，给博客导航栏添加快捷按钮十分方便开发者。&lt;br&gt;本文将详述如何给导航栏添加快捷链接。&lt;/p&gt;</summary>
    
    
    
    <category term="教程" scheme="https://scholargeek.github.io/categories/Tutorial/"/>
    
    
    <category term="Hexo" scheme="https://scholargeek.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客默认主题的修改与美化15</title>
    <link href="https://scholargeek.github.io/2019/07/30/Hexo%E5%8D%9A%E5%AE%A2%E9%BB%98%E8%AE%A4%E4%B8%BB%E9%A2%98%E7%9A%84%E4%BF%AE%E6%94%B9%E4%B8%8E%E7%BE%8E%E5%8C%9615/"/>
    <id>https://scholargeek.github.io/2019/07/30/Hexo%E5%8D%9A%E5%AE%A2%E9%BB%98%E8%AE%A4%E4%B8%BB%E9%A2%98%E7%9A%84%E4%BF%AE%E6%94%B9%E4%B8%8E%E7%BE%8E%E5%8C%9615/</id>
    <published>2019-07-30T04:06:06.000Z</published>
    <updated>2019-07-30T00:28:08.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="给博客导航栏添加日历"><a href="#给博客导航栏添加日历" class="headerlink" title="给博客导航栏添加日历"></a>给博客导航栏添加日历</h1><p>美观的博客一般都有事件日历，如wordpress日历插件一般，使用户一眼就能看出本月有哪些天推送了博文，方便按时间查找文档。本文将详述Hexo博客侧边栏如何添加日历。</p><span id="more"></span><h2 id="安装日历插件"><a href="#安装日历插件" class="headerlink" title="安装日历插件"></a>安装日历插件</h2><p>使用PowerShell进入博客目录，执行以下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save git://github.com/howiefh/hexo-generator-calendar.git</span><br></pre></td></tr></table></figure><p>即可安装calendar插件。</p><h2 id="添加JS文件"><a href="#添加JS文件" class="headerlink" title="添加JS文件"></a>添加JS文件</h2><p>此外还需在如下目录添加文件<br>\blog\themes\landscape\layout_widget\calendar.ejs<br>\blog\themes\landscape\source\js\languages.js<br>\blog\themes\landscape\source\js\calendar.js<br>\blog\themes\landscape\source\css_partial\calendar.styl</p><p>在\blog\themes\landscape\source\css_variables.styl中添加如下代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">color-calendar-border = #d1d1d1  color-calendar-post-bg = #007acc  color-calendar-hover-bg = #686868</span><br></pre></td></tr></table></figure><p>在\blog\themes\landscape\layout_partial\after-footer.ejs中添加如下代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;% if (theme.widgets.indexOf(&#x27;calendar&#x27;) != -1)&#123; %&gt;</span><br><span class="line"> &lt;%- js(&#x27;js/languages&#x27;) %&gt;</span><br><span class="line"> &lt;%- js(&#x27;js/calendar&#x27;) %&gt;</span><br><span class="line"></span><br><span class="line"> &lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line"> $(function() &#123;</span><br><span class="line"> &lt;% if (typeof theme.calendar.options === &#x27;object&#x27;) &#123; %&gt;</span><br><span class="line"> $(&#x27;#calendar&#x27;).aCalendar(&#x27;&lt;%= theme.calendar.language || config.language %&gt;&#x27;, $.extend(&lt;%- JSON.stringify(theme.calendar.options) %&gt;, &#123;root:&#x27;&lt;%= config.root %&gt;&#x27;, calendarSingle:&lt;%= config.calendar.single %&gt;, calendarRoot:&#x27;&lt;%= config.calendar.root %&gt;&#x27;&#125;));</span><br><span class="line"> &lt;% &#125; else &#123; %&gt;</span><br><span class="line"> $(&#x27;#calendar&#x27;).aCalendar(&#x27;&lt;%= theme.calendar.language || config.language %&gt;&#x27;, &#123;root:&#x27;&lt;%= config.root %&gt;&#x27;, calendarSingle:&lt;%= config.calendar.single %&gt;, calendarRoot:&#x27;&lt;%= config.calendar.root %&gt;&#x27;&#125;);</span><br><span class="line"> &lt;% &#125; %&gt;</span><br><span class="line">  &#125;);</span><br><span class="line"> &lt;/script&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure><h2 id="设置配置文件"><a href="#设置配置文件" class="headerlink" title="设置配置文件"></a>设置配置文件</h2><p>在博客根目录配置文件_config.yml中添加如下代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">calendar:</span><br><span class="line"> single: true</span><br><span class="line"> root: calendar/</span><br></pre></td></tr></table></figure><p>在主题\blog\themes\landscape目录下的配置文件config.yml中添加如下代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">calendar:</span><br><span class="line"> language: zh-CN</span><br><span class="line"> options:</span><br><span class="line"> months: [&#x27;January&#x27;, &#x27;February&#x27;, &#x27;March&#x27;, &#x27;April&#x27;, &#x27;May&#x27;, &#x27;June&#x27;, &#x27;July&#x27;, &#x27;August&#x27;, &#x27;September&#x27;, &#x27;October&#x27;, &#x27;November&#x27;, &#x27;December&#x27;]</span><br><span class="line"> dayOfWeekShort: [&#x27;S&#x27;, &#x27;M&#x27;, &#x27;T&#x27;, &#x27;W&#x27;, &#x27;T&#x27;, &#x27;F&#x27;, &#x27;S&#x27;]</span><br><span class="line"> dayOfWeek: [&#x27;Sunday&#x27;, &#x27;Monday&#x27;, &#x27;Tuesday&#x27;, &#x27;Wednesday&#x27;, &#x27;Thursday&#x27;, &#x27;Friday&#x27;, &#x27;Saturday&#x27;]</span><br><span class="line"> postsMonthTip: &#x27;Posts published in LMM yyyy&#x27;</span><br><span class="line">   titleFormat: &#x27;yyyy LMM&#x27;</span><br><span class="line"> titleLinkFormat: &#x27;archives/yyyy/MM/&#x27;</span><br><span class="line"> headArrows: &#123;previous: &#x27;&lt;span class=&quot;cal-prev&quot;&gt;&lt;/span&gt;&#x27;, next: &#x27;&lt;span class=&quot;cal-next&quot;&gt;&lt;/span&gt;&#x27;&#125;</span><br><span class="line"> footArrows: &#123;previous: &#x27; &#x27;, next: &#x27; &#x27;&#125;</span><br><span class="line"> weekOffset: 0</span><br><span class="line"> calendarSingle: false</span><br><span class="line">  calendarRoot: &#x27;calendar/&#x27;</span><br><span class="line"> calendarUrl: &#x27;calendar.json&#x27;</span><br></pre></td></tr></table></figure><p>完成上述设置后，博客的侧边栏中就添加好了日历。</p><hr><p><strong>版权声明</strong></p><p><img src="/images/cc.png"></p><p><a href="https://scholargeek.github.io/">Scholar’s Blog</a> by <a href="https://scholargeek.github.io/About/">scholargeek</a> is licensed under a <a href="http://creativecommons.org/licenses/by-nc-nd/4.0/">Creative Commons BY-NC-ND 4.0 International License</a>.<br>由<a href="https://scholargeek.github.io/About/">董仕麟</a>创作并维护的<a href="https://scholargeek.github.io/">scholargeek</a>博客采用<a href="http://creativecommons.org/licenses/by-nc-nd/4.0/">创作共用保留署名-非商业-禁止演绎4.0国际许可证</a>。</p><p>本文首发于<a href="https://scholargeek.github.io/">Scholar’s Blog</a>博客，版权所有，侵权必究。</p><p>本文永久链接：<a href="https://scholargeek.github.io/2019/07/30/Hexo%E5%8D%9A%E5%AE%A2%E9%BB%98%E8%AE%A4%E4%B8%BB%E9%A2%98%E7%9A%84%E4%BF%AE%E6%94%B9%E4%B8%8E%E7%BE%8E%E5%8C%9615/">https://scholargeek.github.io/2019/07/30/Hexo%E5%8D%9A%E5%AE%A2%E9%BB%98%E8%AE%A4%E4%B8%BB%E9%A2%98%E7%9A%84%E4%BF%AE%E6%94%B9%E4%B8%8E%E7%BE%8E%E5%8C%9615/</a></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;给博客导航栏添加日历&quot;&gt;&lt;a href=&quot;#给博客导航栏添加日历&quot; class=&quot;headerlink&quot; title=&quot;给博客导航栏添加日历&quot;&gt;&lt;/a&gt;给博客导航栏添加日历&lt;/h1&gt;&lt;p&gt;美观的博客一般都有事件日历，如wordpress日历插件一般，使用户一眼就能看出本月有哪些天推送了博文，方便按时间查找文档。本文将详述Hexo博客侧边栏如何添加日历。&lt;/p&gt;</summary>
    
    
    
    <category term="教程" scheme="https://scholargeek.github.io/categories/Tutorial/"/>
    
    
    <category term="Hexo" scheme="https://scholargeek.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客默认主题的修改与美化14</title>
    <link href="https://scholargeek.github.io/2019/07/28/Hexo%E5%8D%9A%E5%AE%A2%E9%BB%98%E8%AE%A4%E4%B8%BB%E9%A2%98%E7%9A%84%E4%BF%AE%E6%94%B9%E4%B8%8E%E7%BE%8E%E5%8C%9614/"/>
    <id>https://scholargeek.github.io/2019/07/28/Hexo%E5%8D%9A%E5%AE%A2%E9%BB%98%E8%AE%A4%E4%B8%BB%E9%A2%98%E7%9A%84%E4%BF%AE%E6%94%B9%E4%B8%8E%E7%BE%8E%E5%8C%9614/</id>
    <published>2019-07-28T04:06:06.000Z</published>
    <updated>2019-07-28T00:28:08.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="修改博客中导航栏的颜色与字体"><a href="#修改博客中导航栏的颜色与字体" class="headerlink" title="修改博客中导航栏的颜色与字体"></a>修改博客中导航栏的颜色与字体</h1><p>Hexo博客默认主题landscape中的导航栏字体太小，背景色太单调，如果想设置该怎么办呢？本文将详述导航栏颜色与字体的设置。</p><span id="more"></span><p>打开\blog\themes\landscape\source\css_partial目录下的header.styl 文件，做如下设置：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">#header</span><br><span class="line"></span><br><span class="line"> height: banner-height</span><br><span class="line"></span><br><span class="line"> position: relative</span><br><span class="line"></span><br><span class="line"> border-bottom: 1px solid color-border</span><br><span class="line"></span><br><span class="line"> &amp;:before, &amp;:after</span><br><span class="line"></span><br><span class="line"> content: &quot;&quot;</span><br><span class="line"></span><br><span class="line"> position: absolute</span><br><span class="line"></span><br><span class="line"> left: 0</span><br><span class="line"></span><br><span class="line"> right: 0</span><br><span class="line"></span><br><span class="line"> height: 55px #此处有修改，更改导航栏高度，默认40px</span><br><span class="line"></span><br><span class="line"> &amp;:before</span><br><span class="line"></span><br><span class="line"> top: 0</span><br><span class="line"></span><br><span class="line"> background: linear-gradient(red, transparent)</span><br><span class="line"></span><br><span class="line">#此处有修改，更改导航栏渐变颜色，默认linear-gradient(rgba(0, 0, 0, 0.2), transparent)</span><br><span class="line"></span><br><span class="line">#main-nav</span><br><span class="line"></span><br><span class="line"> float: left</span><br><span class="line"></span><br><span class="line"> font-size: 18px</span><br><span class="line"></span><br><span class="line">#此处有添加，更改导航栏字体的大小，默认font-size=14px</span><br><span class="line"></span><br><span class="line">.nav-icon</span><br><span class="line"></span><br><span class="line"> @extend $nav-link</span><br><span class="line"></span><br><span class="line"> font-family: font-icon</span><br><span class="line"></span><br><span class="line"> text-align: center</span><br><span class="line"></span><br><span class="line"> font-size: 18px #更改导航栏图标的大小，默认font-size=font-size</span><br></pre></td></tr></table></figure><p>按照代码中注释所述按需进行修改即可。</p><hr><p><strong>版权声明</strong></p><p><img src="/images/cc.png"></p><p><a href="https://scholargeek.github.io/">Scholar’s Blog</a> by <a href="https://scholargeek.github.io/About/">scholargeek</a> is licensed under a <a href="http://creativecommons.org/licenses/by-nc-nd/4.0/">Creative Commons BY-NC-ND 4.0 International License</a>.<br>由<a href="https://scholargeek.github.io/About/">董仕麟</a>创作并维护的<a href="https://scholargeek.github.io/">scholargeek</a>博客采用<a href="http://creativecommons.org/licenses/by-nc-nd/4.0/">创作共用保留署名-非商业-禁止演绎4.0国际许可证</a>。</p><p>本文首发于<a href="https://scholargeek.github.io/">Scholar’s Blog</a>博客，版权所有，侵权必究。</p><p>本文永久链接：<a href="https://scholargeek.github.io/2019/07/28/Hexo%E5%8D%9A%E5%AE%A2%E9%BB%98%E8%AE%A4%E4%B8%BB%E9%A2%98%E7%9A%84%E4%BF%AE%E6%94%B9%E4%B8%8E%E7%BE%8E%E5%8C%9614/">https://scholargeek.github.io/2019/07/28/Hexo%E5%8D%9A%E5%AE%A2%E9%BB%98%E8%AE%A4%E4%B8%BB%E9%A2%98%E7%9A%84%E4%BF%AE%E6%94%B9%E4%B8%8E%E7%BE%8E%E5%8C%9614/</a></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;修改博客中导航栏的颜色与字体&quot;&gt;&lt;a href=&quot;#修改博客中导航栏的颜色与字体&quot; class=&quot;headerlink&quot; title=&quot;修改博客中导航栏的颜色与字体&quot;&gt;&lt;/a&gt;修改博客中导航栏的颜色与字体&lt;/h1&gt;&lt;p&gt;Hexo博客默认主题landscape中的导航栏字体太小，背景色太单调，如果想设置该怎么办呢？本文将详述导航栏颜色与字体的设置。&lt;/p&gt;</summary>
    
    
    
    <category term="教程" scheme="https://scholargeek.github.io/categories/Tutorial/"/>
    
    
    <category term="Hexo" scheme="https://scholargeek.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客默认主题的修改与美化13</title>
    <link href="https://scholargeek.github.io/2019/07/27/Hexo%E5%8D%9A%E5%AE%A2%E9%BB%98%E8%AE%A4%E4%B8%BB%E9%A2%98%E7%9A%84%E4%BF%AE%E6%94%B9%E4%B8%8E%E7%BE%8E%E5%8C%9613/"/>
    <id>https://scholargeek.github.io/2019/07/27/Hexo%E5%8D%9A%E5%AE%A2%E9%BB%98%E8%AE%A4%E4%B8%BB%E9%A2%98%E7%9A%84%E4%BF%AE%E6%94%B9%E4%B8%8E%E7%BE%8E%E5%8C%9613/</id>
    <published>2019-07-27T08:06:06.000Z</published>
    <updated>2019-07-27T00:28:08.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="给博客添加背景音乐"><a href="#给博客添加背景音乐" class="headerlink" title="给博客添加背景音乐"></a>给博客添加背景音乐</h1><p>一个成熟的博客网站想变的生动是不能没有音乐的，本文将详述如何将背景音乐播放器添加到侧边栏。</p><span id="more"></span><h2 id="获取播放器外链"><a href="#获取播放器外链" class="headerlink" title="获取播放器外链"></a>获取播放器外链</h2><p>打开网页版网易云音乐，选择你准备添加的背景音乐，点击生成外链播放器，前提是要有版权，否则无法生成外链播放器，复制底下的HTML代码。</p><h2 id="新建JS文件"><a href="#新建JS文件" class="headerlink" title="新建JS文件"></a>新建JS文件</h2><p>在\blog\themes\landscape\layout_widget\ 路径下新建music.ejs文件，将复制的代码放入其中，如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;widget-wrap&quot;&gt;</span><br><span class="line"></span><br><span class="line"> &lt;h3 class=&quot;widget-title&quot;&gt;音乐&lt;/h3&gt;</span><br><span class="line"></span><br><span class="line"> &lt;div class=&quot;widget&quot;&gt;</span><br><span class="line"></span><br><span class="line"> &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><p>修改主题的配置文件,在\blog\themes\landscape\ 路径下的_config.yml文件中添加标签，如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">widgets:</span><br><span class="line">- music</span><br></pre></td></tr></table></figure><p>完成上述设置即可在右侧菜单栏显示音乐播放器。</p><hr><p><strong>版权声明</strong></p><p><img src="/images/cc.png"></p><p><a href="https://scholargeek.github.io/">Scholar’s Blog</a> by <a href="https://scholargeek.github.io/About/">scholargeek</a> is licensed under a <a href="http://creativecommons.org/licenses/by-nc-nd/4.0/">Creative Commons BY-NC-ND 4.0 International License</a>.<br>由<a href="https://scholargeek.github.io/About/">董仕麟</a>创作并维护的<a href="https://scholargeek.github.io/">scholargeek</a>博客采用<a href="http://creativecommons.org/licenses/by-nc-nd/4.0/">创作共用保留署名-非商业-禁止演绎4.0国际许可证</a>。</p><p>本文首发于<a href="https://scholargeek.github.io/">Scholar’s Blog</a>博客，版权所有，侵权必究。</p><p>本文永久链接：<a href="https://scholargeek.github.io/2019/07/27/Hexo%E5%8D%9A%E5%AE%A2%E9%BB%98%E8%AE%A4%E4%B8%BB%E9%A2%98%E7%9A%84%E4%BF%AE%E6%94%B9%E4%B8%8E%E7%BE%8E%E5%8C%9613/">https://scholargeek.github.io/2019/07/27/Hexo%E5%8D%9A%E5%AE%A2%E9%BB%98%E8%AE%A4%E4%B8%BB%E9%A2%98%E7%9A%84%E4%BF%AE%E6%94%B9%E4%B8%8E%E7%BE%8E%E5%8C%9613/</a></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;给博客添加背景音乐&quot;&gt;&lt;a href=&quot;#给博客添加背景音乐&quot; class=&quot;headerlink&quot; title=&quot;给博客添加背景音乐&quot;&gt;&lt;/a&gt;给博客添加背景音乐&lt;/h1&gt;&lt;p&gt;一个成熟的博客网站想变的生动是不能没有音乐的，本文将详述如何将背景音乐播放器添加到侧边栏。&lt;/p&gt;</summary>
    
    
    
    <category term="教程" scheme="https://scholargeek.github.io/categories/Tutorial/"/>
    
    
    <category term="Hexo" scheme="https://scholargeek.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客默认主题的修改与美化12</title>
    <link href="https://scholargeek.github.io/2019/07/26/Hexo%E5%8D%9A%E5%AE%A2%E9%BB%98%E8%AE%A4%E4%B8%BB%E9%A2%98%E7%9A%84%E4%BF%AE%E6%94%B9%E4%B8%8E%E7%BE%8E%E5%8C%9612/"/>
    <id>https://scholargeek.github.io/2019/07/26/Hexo%E5%8D%9A%E5%AE%A2%E9%BB%98%E8%AE%A4%E4%B8%BB%E9%A2%98%E7%9A%84%E4%BF%AE%E6%94%B9%E4%B8%8E%E7%BE%8E%E5%8C%9612/</id>
    <published>2019-07-26T08:06:06.000Z</published>
    <updated>2019-07-26T00:28:08.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="给博客背景添加动态线条效果"><a href="#给博客背景添加动态线条效果" class="headerlink" title="给博客背景添加动态线条效果"></a>给博客背景添加动态线条效果</h1><p>如果想继续美化博客的背景，可以在背景上添加动态线条，本文将表述如何给博客背景添加动态线条。</p><span id="more"></span><p>在 \blog\themes\landscape\layout\layout.ejs 文件中添加如下代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--动态线条背景--&gt;</span><br><span class="line"></span><br><span class="line">&lt;script type=&quot;text/javascript&quot;</span><br><span class="line"></span><br><span class="line">color=&quot;220,220,220&quot; opacity=&#x27;0.7&#x27; zIndex=&quot;-2&quot; count=&quot;200&quot; src=&quot;//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><hr><p><strong>版权声明</strong></p><p><img src="/images/cc.png"></p><p><a href="https://scholargeek.github.io/">Scholar’s Blog</a> by <a href="https://scholargeek.github.io/About/">scholargeek</a> is licensed under a <a href="http://creativecommons.org/licenses/by-nc-nd/4.0/">Creative Commons BY-NC-ND 4.0 International License</a>.<br>由<a href="https://scholargeek.github.io/About/">董仕麟</a>创作并维护的<a href="https://scholargeek.github.io/">scholargeek</a>博客采用<a href="http://creativecommons.org/licenses/by-nc-nd/4.0/">创作共用保留署名-非商业-禁止演绎4.0国际许可证</a>。</p><p>本文首发于<a href="https://scholargeek.github.io/">Scholar’s Blog</a>博客，版权所有，侵权必究。</p><p>本文永久链接：<a href="https://scholargeek.github.io/2019/07/26/Hexo%E5%8D%9A%E5%AE%A2%E9%BB%98%E8%AE%A4%E4%B8%BB%E9%A2%98%E7%9A%84%E4%BF%AE%E6%94%B9%E4%B8%8E%E7%BE%8E%E5%8C%9612/">https://scholargeek.github.io/2019/07/26/Hexo%E5%8D%9A%E5%AE%A2%E9%BB%98%E8%AE%A4%E4%B8%BB%E9%A2%98%E7%9A%84%E4%BF%AE%E6%94%B9%E4%B8%8E%E7%BE%8E%E5%8C%9612/</a></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;给博客背景添加动态线条效果&quot;&gt;&lt;a href=&quot;#给博客背景添加动态线条效果&quot; class=&quot;headerlink&quot; title=&quot;给博客背景添加动态线条效果&quot;&gt;&lt;/a&gt;给博客背景添加动态线条效果&lt;/h1&gt;&lt;p&gt;如果想继续美化博客的背景，可以在背景上添加动态线条，本文将表述如何给博客背景添加动态线条。&lt;/p&gt;</summary>
    
    
    
    <category term="教程" scheme="https://scholargeek.github.io/categories/Tutorial/"/>
    
    
    <category term="Hexo" scheme="https://scholargeek.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客默认主题的修改与美化11</title>
    <link href="https://scholargeek.github.io/2019/07/26/Hexo%E5%8D%9A%E5%AE%A2%E9%BB%98%E8%AE%A4%E4%B8%BB%E9%A2%98%E7%9A%84%E4%BF%AE%E6%94%B9%E4%B8%8E%E7%BE%8E%E5%8C%9611/"/>
    <id>https://scholargeek.github.io/2019/07/26/Hexo%E5%8D%9A%E5%AE%A2%E9%BB%98%E8%AE%A4%E4%B8%BB%E9%A2%98%E7%9A%84%E4%BF%AE%E6%94%B9%E4%B8%8E%E7%BE%8E%E5%8C%9611/</id>
    <published>2019-07-26T04:06:06.000Z</published>
    <updated>2019-07-26T00:28:08.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="给博客添加点击出现爱心的效果"><a href="#给博客添加点击出现爱心的效果" class="headerlink" title="给博客添加点击出现爱心的效果"></a>给博客添加点击出现爱心的效果</h1><p>本文将详述如何使博客网站在用户点击时出现爱心的效果。</p><span id="more"></span><h2 id="新建JS代码"><a href="#新建JS代码" class="headerlink" title="新建JS代码"></a>新建JS代码</h2><p>在 \blog\themes\landscape\source\js下新建文件 love.js，在 love.js 文件中添加以下代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!function(e,t,a)&#123;function n()&#123;c(&quot;.heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: &#x27;&#x27;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 500%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;&quot;),o(),r()&#125;function r()&#123;for(var e=0;e&lt;d.length;e++)d[e].alpha&lt;=0?(t.body.removeChild(d[e].el),d.splice(e,1)):(d[e].y--,d[e].scale+=.004,d[e].alpha-=.013,d[e].el.style.cssText=&quot;left:&quot;+d[e].x+&quot;px;top:&quot;+d[e].y+&quot;px;opacity:&quot;+d[e].alpha+&quot;;transform:scale(&quot;+d[e].scale+&quot;,&quot;+d[e].scale+&quot;) rotate(45deg);background:&quot;+d[e].color+&quot;;z-index:99999&quot;);requestAnimationFrame(r)&#125;function o()&#123;var t=&quot;function&quot;==typeof e.onclick&amp;&amp;e.onclick;e.onclick=function(e)&#123;t&amp;&amp;t(),i(e)&#125;&#125;function i(e)&#123;var a=t.createElement(&quot;div&quot;);a.className=&quot;heart&quot;,d.push(&#123;el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:s()&#125;),t.body.appendChild(a)&#125;function c(e)&#123;var a=t.createElement(&quot;style&quot;);a.type=&quot;text/css&quot;;try&#123;a.appendChild(t.createTextNode(e))&#125;catch(t)&#123;a.styleSheet.cssText=e&#125;t.getElementsByTagName(&quot;head&quot;)[0].appendChild(a)&#125;function s()&#123;return&quot;rgb(&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;)&quot;&#125;var d=[];e.requestAnimationFrame=function()&#123;return e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||function(e)&#123;setTimeout(e,1e3/60)&#125;&#125;(),n()&#125;(window,document);</span><br></pre></td></tr></table></figure><h2 id="添加JS代码"><a href="#添加JS代码" class="headerlink" title="添加JS代码"></a>添加JS代码</h2><p>在 \blog\themes\landscape\layout\layout.ejs 文件末尾添加以下代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 页面点击小红心 --&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;/js/love.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>完成以上操作后，当我们游览博客点击鼠标时就可以看见爱心的特效了。</p><hr><p><strong>版权声明</strong></p><p><img src="/images/cc.png"></p><p><a href="https://scholargeek.github.io/">Scholar’s Blog</a> by <a href="https://scholargeek.github.io/About/">scholargeek</a> is licensed under a <a href="http://creativecommons.org/licenses/by-nc-nd/4.0/">Creative Commons BY-NC-ND 4.0 International License</a>.<br>由<a href="https://scholargeek.github.io/About/">董仕麟</a>创作并维护的<a href="https://scholargeek.github.io/">scholargeek</a>博客采用<a href="http://creativecommons.org/licenses/by-nc-nd/4.0/">创作共用保留署名-非商业-禁止演绎4.0国际许可证</a>。</p><p>本文首发于<a href="https://scholargeek.github.io/">Scholar’s Blog</a>博客，版权所有，侵权必究。</p><p>本文永久链接：<a href="https://scholargeek.github.io/2019/07/26/Hexo%E5%8D%9A%E5%AE%A2%E9%BB%98%E8%AE%A4%E4%B8%BB%E9%A2%98%E7%9A%84%E4%BF%AE%E6%94%B9%E4%B8%8E%E7%BE%8E%E5%8C%9611/">https://scholargeek.github.io/2019/07/26/Hexo%E5%8D%9A%E5%AE%A2%E9%BB%98%E8%AE%A4%E4%B8%BB%E9%A2%98%E7%9A%84%E4%BF%AE%E6%94%B9%E4%B8%8E%E7%BE%8E%E5%8C%9611/</a></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;给博客添加点击出现爱心的效果&quot;&gt;&lt;a href=&quot;#给博客添加点击出现爱心的效果&quot; class=&quot;headerlink&quot; title=&quot;给博客添加点击出现爱心的效果&quot;&gt;&lt;/a&gt;给博客添加点击出现爱心的效果&lt;/h1&gt;&lt;p&gt;本文将详述如何使博客网站在用户点击时出现爱心的效果。&lt;/p&gt;</summary>
    
    
    
    <category term="教程" scheme="https://scholargeek.github.io/categories/Tutorial/"/>
    
    
    <category term="Hexo" scheme="https://scholargeek.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客默认主题的修改与美化10</title>
    <link href="https://scholargeek.github.io/2019/07/24/Hexo%E5%8D%9A%E5%AE%A2%E9%BB%98%E8%AE%A4%E4%B8%BB%E9%A2%98%E7%9A%84%E4%BF%AE%E6%94%B9%E4%B8%8E%E7%BE%8E%E5%8C%9610/"/>
    <id>https://scholargeek.github.io/2019/07/24/Hexo%E5%8D%9A%E5%AE%A2%E9%BB%98%E8%AE%A4%E4%B8%BB%E9%A2%98%E7%9A%84%E4%BF%AE%E6%94%B9%E4%B8%8E%E7%BE%8E%E5%8C%9610/</id>
    <published>2019-07-24T04:06:06.000Z</published>
    <updated>2019-07-24T00:28:08.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="给HEXO博客添加-Live2d小人"><a href="#给HEXO博客添加-Live2d小人" class="headerlink" title="给HEXO博客添加 Live2d小人"></a>给HEXO博客添加 Live2d小人</h1><p>Live2D是一种应用于电子游戏的绘图渲染技术，通过一系列的连续图像和人物建模来生成一种类似三维模型的二维图像，缺点是Live 2D人物无法大幅度转身，开发商正设法让该技术可显示360度图像。添加Live2D人物模型到网页中使得页面更加生动有趣，本文将详述如何将Live2d小人添加到Hexo博客中。</p><span id="more"></span><h2 id="安装live2d模块"><a href="#安装live2d模块" class="headerlink" title="安装live2d模块"></a>安装live2d模块</h2><p>在博客已搭建好之后，使用PowerShell进入博客目录。使用命令 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-helper-live2d </span><br></pre></td></tr></table></figure><p>安装hexo-helper-live2d模块,以便使用。</p><h2 id="添加配置文件"><a href="#添加配置文件" class="headerlink" title="添加配置文件"></a>添加配置文件</h2><p>在根目录下的_config.yml添加配置，内容如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">live2d:</span><br><span class="line"> enable: true # 是否启动</span><br><span class="line"> scriptFrom: local # 默认</span><br><span class="line"> pluginRootPath: live2dw/ # 插件在站点上的根目录(相对路径)</span><br><span class="line"> pluginJsPath: lib/ # 脚本文件相对与插件根目录路径</span><br><span class="line"> pluginModelPath: assets/ # 模型文件相对与插件根目录路径</span><br><span class="line"> tagMode: false # 标签模式, 是否仅替换 live2d tag标签而非插入到所有页面中</span><br><span class="line"> debug: false # 调试, 是否在控制台输出日志</span><br><span class="line"> model:</span><br><span class="line"> use: live2d-widget ## 模型文件</span><br><span class="line"> display:</span><br><span class="line"> position: right # 定位方向 left right top bottom</span><br><span class="line"> width: 150 # 小人宽度</span><br><span class="line"> height: 300 # 小人高度</span><br><span class="line"> hOffset: -15 # 向 偏移</span><br><span class="line"> vOffset: -15 # 像 偏移</span><br><span class="line"> mobile:</span><br><span class="line"> show: true # 手机端是否显示</span><br><span class="line"> react:</span><br><span class="line"> opacity: 0.7 # 模型透明度</span><br></pre></td></tr></table></figure><h2 id="选择模型"><a href="#选择模型" class="headerlink" title="选择模型"></a>选择模型</h2><p>可选择的模型如下表：<br>| 模型图片| 命令 |</p><p><img src="https://s3.bmp.ovh/imgs/2023/01/19/52c131ea792aec46.png" alt="chitose">  live2d-widget-model-chitose<br><img src="https://s3.bmp.ovh/imgs/2023/01/19/0005788207b1f4ff.png" alt="epsilon2_1">  live2d-widget-model-epsilon2_1<br> <img src="https://s3.bmp.ovh/imgs/2023/01/19/5420a69a96bb0848.png" alt="gf">  live2d-widget-model-gf<br><img src="https://s3.bmp.ovh/imgs/2023/01/19/a2c92984122ebc93.png" alt="haru/01">  live2d-widget-model-haru&#x2F;01<br><img src="https://s3.bmp.ovh/imgs/2023/01/19/c7529874b0571a16.png" alt="haruto">  live2d-widget-model-haruto<br><img src="https://s3.bmp.ovh/imgs/2023/01/19/50aad6578c5c6f64.png" alt="hibiki">  live2d-widget-model-hibiki<br><img src="https://s3.bmp.ovh/imgs/2023/01/19/1c66642e651fcd6d.png" alt="hijiki">  live2d-widget-model-hijiki<br><img src="https://s3.bmp.ovh/imgs/2023/01/19/b813f92bb40940d7.png" alt="izumi">  live2d-widget-model-izumi<br><img src="https://s3.bmp.ovh/imgs/2023/01/19/e24b1c73d872919d.png" alt="koharu">  live2d-widget-model-koharu<br><img src="https://s3.bmp.ovh/imgs/2023/01/19/7e40a3ada1dd12a2.png" alt="miku">  live2d-widget-model-miku<br><img src="https://s3.bmp.ovh/imgs/2023/01/19/31a18f5006ef48e4.png" alt="ni-j">  live2d-widget-model-ni-j<br><img src="https://s3.bmp.ovh/imgs/2023/01/19/61ea005a7d842cd2.png" alt="nico">  live2d-widget-model-nico<br><img src="https://s3.bmp.ovh/imgs/2023/01/19/8c6363996d3286a1.png" alt="nietzsche">  live2d-widget-model-nietzsche<br><img src="https://s3.bmp.ovh/imgs/2023/01/19/97930b43a220f221.png" alt="nipsilon">  live2d-widget-model-nipsilon<br><img src="https://s3.bmp.ovh/imgs/2023/01/19/feb297255b99db75.png" alt="nito">  live2d-widget-model-nito<br><img src="https://s3.bmp.ovh/imgs/2023/01/19/c2cd7e8a21487780.png" alt="shizuku">  live2d-widget-model-shizuku<br><img src="https://s3.bmp.ovh/imgs/2023/01/19/18dd33bfba9811c7.png" alt="tororo">  live2d-widget-model-tororo<br><img src="https://s3.bmp.ovh/imgs/2023/01/19/ebeb3f3c2cdaf0e2.png" alt="tsumiki">  live2d-widget-model-tsumiki</p><h2 id="下载模型并加载"><a href="#下载模型并加载" class="headerlink" title="下载模型并加载"></a>下载模型并加载</h2><p>选择合适的模型后，在PowerShell中使用命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save live2d-widget-model-xxx</span><br></pre></td></tr></table></figure><p>下载模型,如模型chitose即在PowerShell中输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm  install  –save live2d-widget-model-chitose</span><br></pre></td></tr></table></figure><p>即在\blog\node_modules\ 目录下下载好live2d-widget-model-chitose文件,在根目录下新建<code>live2d_models</code>的文件夹并将下载的模型复制到该文件夹下。</p><h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><p>最后编辑配置文件，打开根目录下的_config.yml，在</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">model:</span><br><span class="line">use: live2d-widget ## 模型文件</span><br></pre></td></tr></table></figure><p>中，修改<code>use:</code>后面的模型文件名称为live2d-widget-model-chitose ,保存即可。</p><p><strong>使用 Hexo clean清除游览器缓存，再使用 Hexo g生成网页，最后用 Hexo d 部署，打开网页后就有个小人在屏幕的右下角看你了。</strong></p><hr><p><strong>版权声明</strong></p><p><img src="/images/cc.png"></p><p><a href="https://scholargeek.github.io/">Scholar’s Blog</a> by <a href="https://scholargeek.github.io/About/">scholargeek</a> is licensed under a <a href="http://creativecommons.org/licenses/by-nc-nd/4.0/">Creative Commons BY-NC-ND 4.0 International License</a>.<br>由<a href="https://scholargeek.github.io/About/">董仕麟</a>创作并维护的<a href="https://scholargeek.github.io/">scholargeek</a>博客采用<a href="http://creativecommons.org/licenses/by-nc-nd/4.0/">创作共用保留署名-非商业-禁止演绎4.0国际许可证</a>。</p><p>本文首发于<a href="https://scholargeek.github.io/">Scholar’s Blog</a>博客，版权所有，侵权必究。</p><p>本文永久链接：<a href="https://scholargeek.github.io/2019/07/24/Hexo%E5%8D%9A%E5%AE%A2%E9%BB%98%E8%AE%A4%E4%B8%BB%E9%A2%98%E7%9A%84%E4%BF%AE%E6%94%B9%E4%B8%8E%E7%BE%8E%E5%8C%9610/">https://scholargeek.github.io/2019/07/24/Hexo%E5%8D%9A%E5%AE%A2%E9%BB%98%E8%AE%A4%E4%B8%BB%E9%A2%98%E7%9A%84%E4%BF%AE%E6%94%B9%E4%B8%8E%E7%BE%8E%E5%8C%9610/</a></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;给HEXO博客添加-Live2d小人&quot;&gt;&lt;a href=&quot;#给HEXO博客添加-Live2d小人&quot; class=&quot;headerlink&quot; title=&quot;给HEXO博客添加 Live2d小人&quot;&gt;&lt;/a&gt;给HEXO博客添加 Live2d小人&lt;/h1&gt;&lt;p&gt;Live2D是一种应用于电子游戏的绘图渲染技术，通过一系列的连续图像和人物建模来生成一种类似三维模型的二维图像，缺点是Live 2D人物无法大幅度转身，开发商正设法让该技术可显示360度图像。添加Live2D人物模型到网页中使得页面更加生动有趣，本文将详述如何将Live2d小人添加到Hexo博客中。&lt;/p&gt;</summary>
    
    
    
    <category term="教程" scheme="https://scholargeek.github.io/categories/Tutorial/"/>
    
    
    <category term="Hexo" scheme="https://scholargeek.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客默认主题的修改与美化9</title>
    <link href="https://scholargeek.github.io/2019/07/23/Hexo%E5%8D%9A%E5%AE%A2%E9%BB%98%E8%AE%A4%E4%B8%BB%E9%A2%98%E7%9A%84%E4%BF%AE%E6%94%B9%E4%B8%8E%E7%BE%8E%E5%8C%969/"/>
    <id>https://scholargeek.github.io/2019/07/23/Hexo%E5%8D%9A%E5%AE%A2%E9%BB%98%E8%AE%A4%E4%B8%BB%E9%A2%98%E7%9A%84%E4%BF%AE%E6%94%B9%E4%B8%8E%E7%BE%8E%E5%8C%969/</id>
    <published>2019-07-23T04:06:06.000Z</published>
    <updated>2019-07-23T00:28:08.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="如何在静态博客首页中只显示摘要信息"><a href="#如何在静态博客首页中只显示摘要信息" class="headerlink" title="如何在静态博客首页中只显示摘要信息"></a>如何在静态博客首页中只显示摘要信息</h1><p>默认情况下hexo博客的首页显示的是完整的文章，而文章比较长的时候这无疑会带来诸多不遍。<br>如果只显示摘要信息，只要在文章正文里面加入一个<span id="more"></span>这样的占位符即可。注意：这个占位符只能另起一行，不能放在其他行内。<br>即在该占位符之前的为摘要信息，其之后的内容则隐藏了，显示为Read More按钮。</p><hr><p><strong>版权声明</strong></p><p><img src="/images/cc.png"></p><p><a href="https://scholargeek.github.io/">Scholar’s Blog</a> by <a href="https://scholargeek.github.io/About/">scholargeek</a> is licensed under a <a href="http://creativecommons.org/licenses/by-nc-nd/4.0/">Creative Commons BY-NC-ND 4.0 International License</a>.<br>由<a href="https://scholargeek.github.io/About/">董仕麟</a>创作并维护的<a href="https://scholargeek.github.io/">scholargeek</a>博客采用<a href="http://creativecommons.org/licenses/by-nc-nd/4.0/">创作共用保留署名-非商业-禁止演绎4.0国际许可证</a>。</p><p>本文首发于<a href="https://scholargeek.github.io/">Scholar’s Blog</a>博客，版权所有，侵权必究。</p><p>本文永久链接：<a href="https://scholargeek.github.io/2019/07/23/Hexo%E5%8D%9A%E5%AE%A2%E9%BB%98%E8%AE%A4%E4%B8%BB%E9%A2%98%E7%9A%84%E4%BF%AE%E6%94%B9%E4%B8%8E%E7%BE%8E%E5%8C%969/">https://scholargeek.github.io/2019/07/23/Hexo%E5%8D%9A%E5%AE%A2%E9%BB%98%E8%AE%A4%E4%B8%BB%E9%A2%98%E7%9A%84%E4%BF%AE%E6%94%B9%E4%B8%8E%E7%BE%8E%E5%8C%969/</a></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;如何在静态博客首页中只显示摘要信息&quot;&gt;&lt;a href=&quot;#如何在静态博客首页中只显示摘要信息&quot; class=&quot;headerlink&quot; title=&quot;如何在静态博客首页中只显示摘要信息&quot;&gt;&lt;/a&gt;如何在静态博客首页中只显示摘要信息&lt;/h1&gt;&lt;p&gt;默认情况下hexo博客的首页显示的是完整的文章，而文章比较长的时候这无疑会带来诸多不遍。&lt;br&gt;如果只显示摘要信息，只要在文章正文里面加入一个&lt;/p&gt;</summary>
    
    
    
    <category term="教程" scheme="https://scholargeek.github.io/categories/Tutorial/"/>
    
    
    <category term="Hexo" scheme="https://scholargeek.github.io/tags/Hexo/"/>
    
  </entry>
  
</feed>
